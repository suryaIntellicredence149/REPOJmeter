<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">false</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="p_token" elementType="Argument">
            <stringProp name="Argument.name">p_token</stringProp>
            <stringProp name="Argument.value">ZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6STFOaUo5LmV5SnNiMk1pT2lKYVR5QkNZVzVuWVd4dmNtVWlMQ0poY0hCV1pYSnphVzl1SWpvaU1USXVOeUlzSW1kbGJtUmxjaUk2SWsxaGJHVWlMQ0poY0hCZmRtVnljMmx2YmlJNklqRXVNQ0lzSW5CaGRHZ2lPaUpvZEhSd2N6b3ZMMjF2WW1sc1pXRndjSE11YUdWeWIyMXZkRzlqYjNKd0xtTnZiUzlrZDJGd2NEOWhjSEE5UlUxUVRFOVpSVVVpTENKMWFXUWlPaUp0YjJKcGJHVmhjSEExTG5KbWJVQm9aWEp2Ylc5MGIyTnZjbkF1WTI5dElpd2lablZ1WTNScGIyNGlPaUpUUVV4RlV5QkJUa1FnUVVaVVJWSWdVMEZNUlZNaUxDSnpZMjl3WlNJNkltRnNiQ0lzSW5SdmEyVnVYM1JwYldVaU9pSXlNREkwTFRFd0xURTFJREV6T2pFeU9qUTRJaXdpWjI5dloyeGxRWEJwUzJWNUlqb2lRVWw2WVZONVEyMHRZa0pXUzFsVE1tZHBWMDlXVEhwTlRVUjNVVnBEUjB0ck0zcExTWE13SWl3aWJHRnpkRjlzYjJkcGJpSTZJakl3TWpRdE1UQXRNVFVnTVRNNk1URTZNamNpTENKdGIySmZibThpT2lJaUxDSm1iM0pqWlZWd1pHRjBaU0k2SWs0aUxDSnRaWE56WVdkbElqb2lJaXdpZEc5clpXNGlPaUl4TXpCaU5XVTRZaTA0WVdNNUxURXhaV1l0T1dVeFl5MWlZVGcwWm1JNFpqSXdNekVpTENJd0lqb2lJaXdpYzNWaVgyeHZZMkYwYVc5dUlqb2lXazhnUW1GdVoyRnNiM0psSWl3aVlYQndYMjVoYldVaU9pSklSVkFpTENKemRXTmpaWE56SWpvaU1TSXNJbWR5WVdSbElqb2lSVFVpTENKaFkyTmxjM05mYTJWNUlqb2lNVE13WWpWbE9HSXRPR0ZqT1MweE1XVm1MVGxsTVdNdFltRTROR1ppT0dZeU1ETXhJaXdpYm1GdFpTSTZJbEIxYm1WbGRDSXNJbXh2WTJGMGFXOXVJam9pVTI5MWRHZ2dXbTl1WlNJc0ltUmxjMmxuYm1GMGFXOXVJam9pVkVWU1VrbFVUMUpaSUUxQlRrRkhSVklnTFNCVFJWSldTVU5GSWl3aWNISnZiWEIwSWpvaUlpd2laV05mYm04aU9pSXhOelV5TkNJc0ltVjRjQ0k2TVRjeU9UZzBNakUyT0gwLlBnWlU5SWtBRF9ueWZYT2RmREs3R1ZTTlBaOXhTeUU4a2JBNVlEbm1ZOFU=</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ThinkTime" elementType="Argument">
            <stringProp name="Argument.name">ThinkTime</stringProp>
            <stringProp name="Argument.value">5000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">10000</stringProp>
          </elementProp>
          <elementProp name="Users" elementType="Argument">
            <stringProp name="Argument.name">Users</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Rampup" elementType="Argument">
            <stringProp name="Argument.name">Rampup</stringProp>
            <stringProp name="Argument.value">120</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">1000</stringProp>
          </elementProp>
          <elementProp name="LoopCount" elementType="Argument">
            <stringProp name="Argument.name">LoopCount</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">900</stringProp>
          </elementProp>
          <elementProp name="Duration" elementType="Argument">
            <stringProp name="Argument.name">Duration</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">1800</stringProp>
            <stringProp name="Argument.value">300</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">www.example.com</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies">
          <elementProp name="SID" elementType="Cookie" testname="SID">
            <stringProp name="Cookie.value">g.a000hwj6u_PStZKBMEz9MJ-lvn7ZxtsehDQ_c5fjpI9n79Mi2cvinPFjcQUZAQsl0czuRKGlZQACgYKATwSAQASFQHGX2MiuihDUSLTH6SP7gCi_dQVShoVAUF8yKq2k3p3uNNuYQCOGNdlxEph0076</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="__Secure-1PSID" elementType="Cookie" testname="__Secure-1PSID">
            <stringProp name="Cookie.value">g.a000hwj6u_PStZKBMEz9MJ-lvn7ZxtsehDQ_c5fjpI9n79Mi2cviDM3s0J-gFbrview1hPZXzAACgYKASgSAQASFQHGX2MigJkZEOrdSLwVh65BB125FhoVAUF8yKqqWPQ8aftSba4S4aQqq_y70076</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="__Secure-3PSID" elementType="Cookie" testname="__Secure-3PSID">
            <stringProp name="Cookie.value">g.a000hwj6u_PStZKBMEz9MJ-lvn7ZxtsehDQ_c5fjpI9n79Mi2cviDf4X4ErPZzcA-C_6VdHgigACgYKAWcSAQASFQHGX2MieZ2Ce1CHXGq0cSXWGJfSYhoVAUF8yKqai6gH6M9ETxVi1qNXBySM0076</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="LSID" elementType="Cookie" testname="LSID">
            <stringProp name="Cookie.value">s.IN|s.SG|s.youtube:g.a000hwj6u0iQphb1ibCTD6iMaKluueHCHc3IEy2n-NJCBlrZiSbFpubAgiYIERxdODeOG1Y3PQACgYKASISAQASFQHGX2MiQU3wBB13_alRnCeXQnupuRoVAUF8yKpuu8LbhPwIaNkHSLpk0IUS0076</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="__Host-1PLSID" elementType="Cookie" testname="__Host-1PLSID">
            <stringProp name="Cookie.value">s.IN|s.SG|s.youtube:g.a000hwj6u0iQphb1ibCTD6iMaKluueHCHc3IEy2n-NJCBlrZiSbF2HhLJD3ZbQvgzS_x8BfFWQACgYKATkSAQASFQHGX2Miz4mkArphj_62nLmgvf6u5RoVAUF8yKoPa6rCrDsRqCpvmY3QcvJv0076</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="__Host-3PLSID" elementType="Cookie" testname="__Host-3PLSID">
            <stringProp name="Cookie.value">s.IN|s.SG|s.youtube:g.a000hwj6u0iQphb1ibCTD6iMaKluueHCHc3IEy2n-NJCBlrZiSbFXRtjHmhZD498R7N3RsrEbQACgYKAaQSAQASFQHGX2Mi40gKmsZWgPsdlqxCrjJMwxoVAUF8yKreZ3I3CuoGYTI9l0fYSlqC0076</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="HSID" elementType="Cookie" testname="HSID">
            <stringProp name="Cookie.value">Atad7_4vwN1egVgho</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="APISID" elementType="Cookie" testname="APISID">
            <stringProp name="Cookie.value">2_QDOTlaEChEGaay/AZiJtXDufqFu4NBn7</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="SAPISID" elementType="Cookie" testname="SAPISID">
            <stringProp name="Cookie.value">LnCJ9WQHnjx6jDc5/A52mb6gLx1o2BrUDf</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="__Secure-1PAPISID" elementType="Cookie" testname="__Secure-1PAPISID">
            <stringProp name="Cookie.value">LnCJ9WQHnjx6jDc5/A52mb6gLx1o2BrUDf</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="__Secure-3PAPISID" elementType="Cookie" testname="__Secure-3PAPISID">
            <stringProp name="Cookie.value">LnCJ9WQHnjx6jDc5/A52mb6gLx1o2BrUDf</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="ACCOUNT_CHOOSER" elementType="Cookie" testname="ACCOUNT_CHOOSER">
            <stringProp name="Cookie.value">AFx_qI6zQFjo36ZOSxU_AHQwpqAAFVUOa9bILsuzyqx8d-3MDpXaPJjZW-22XLqng0LaAHG5zmKLF0KzMVCskmZd0xhvHK5zXzchAEbv6LHkArQs97BMo2dlaZrGM2teqkrjACzOuJn8ls6Kk5vRc3niCn39dxwHrMoIul_QVgWLXhLo-Rj6E1k</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="__Host-GAPS" elementType="Cookie" testname="__Host-GAPS">
            <stringProp name="Cookie.value">1:r6e0IiD433FZuAh70-ph90xuNeOOXLeRHWsWseHsgKNW4m3dk0KmHoQTgQlsi-5EyJwZ2eA6Em9MQydePyroEoLHvo4SKg:97EWpB5M6tK6ZlvQ</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="NID" elementType="Cookie" testname="NID">
            <stringProp name="Cookie.value">512=NfDo5tmYOpNLQ4r3dy51pZdsDfb7FXTiS9QO1VhHTRqYZuqtNaN2j_fzjodJsiWfn50qbPNsmE_9-Siux8fupGNJ7_xnYJiKqWyRvqmH9-lNEFQQQc4KvW5A27-aKP-dLtmwvO4kvQdWI290RB9psI6Mmo71zyGtb6WkbmqRMCKH3dJ6fVLWN-7Q1sYbGwnBt4s</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">true</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="SIDCC" elementType="Cookie" testname="SIDCC">
            <stringProp name="Cookie.value">AKEyXzWqaWoNg-a17yll_HOXxPdNsansGUT4hrq2_lDiuzve-AZrT3CGe6312IutDmxhLKPKkg</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="__Secure-1PSIDCC" elementType="Cookie" testname="__Secure-1PSIDCC">
            <stringProp name="Cookie.value">AKEyXzU06C6rPz4UeZzWp-wBmd4qjSncV6oAYjfbrky5sjNAdtQWNkpnUTJPIEG26YnBJbxY</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="__Secure-3PSIDCC" elementType="Cookie" testname="__Secure-3PSIDCC">
            <stringProp name="Cookie.value">AKEyXzWSjYdqMZfV377x-Cb1uHtQaJpOApcHDQfIKVLGc6QfRjYnAxBCpSPSrZU4Y03k7eyN</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="g_state" elementType="Cookie" testname="g_state">
            <stringProp name="Cookie.value">{&quot;i_l&quot;:0}</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="affinity" elementType="Cookie" testname="affinity">
            <stringProp name="Cookie.value">&quot;3d25390a1f13ae86&quot;</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="_gcl_au" elementType="Cookie" testname="_gcl_au">
            <stringProp name="Cookie.value">1.1.1764832950.1711548408</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="_ga_5YVWH057N6" elementType="Cookie" testname="_ga_5YVWH057N6">
            <stringProp name="Cookie.value">GS1.1.1711548408.1.0.1711548408.60.0.0</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="_ga_D05S4V5RME" elementType="Cookie" testname="_ga_D05S4V5RME">
            <stringProp name="Cookie.value">GS1.1.1711548408.1.0.1711548408.60.0.0</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="_ga" elementType="Cookie" testname="_ga">
            <stringProp name="Cookie.value">GA1.2.559815384.1711548408</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="_gid" elementType="Cookie" testname="_gid">
            <stringProp name="Cookie.value">GA1.2.1970724904.1711548409</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="_gat" elementType="Cookie" testname="_gat">
            <stringProp name="Cookie.value">1</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="_fbp" elementType="Cookie" testname="_fbp">
            <stringProp name="Cookie.value">fb.1.1711548409496.1219107351</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="kndctr_154B7D2962E3DD940A495E75_AdobeOrg_identity" elementType="Cookie" testname="kndctr_154B7D2962E3DD940A495E75_AdobeOrg_identity">
            <stringProp name="Cookie.value">CiYyMDQ5ODg4ODI0MzkyMzA0NTY4MDg1NDIyMzM3MTc1NjUxNzAxOVITCPTS8IHoMRABGAEqBFNHUDMwAPAB9NLwgegx</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="kndctr_154B7D2962E3DD940A495E75_AdobeOrg_cluster" elementType="Cookie" testname="kndctr_154B7D2962E3DD940A495E75_AdobeOrg_cluster">
            <stringProp name="Cookie.value">sgp3</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="AMCV_154B7D2962E3DD940A495E75@AdobeOrg" elementType="Cookie" testname="AMCV_154B7D2962E3DD940A495E75@AdobeOrg">
            <stringProp name="Cookie.value">MCMID|20498888243923045680854223371756517019</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="SSID" elementType="Cookie" testname="SSID">
            <stringProp name="Cookie.value">A8J2AUnlsufSoqhXy</stringProp>
            <stringProp name="Cookie.domain"></stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
        </collectionProp>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Functionalloginid" enabled="false">
        <stringProp name="filename">C:/Hero_Hub_Mobile(Previous)/TestData/Functionalloginid.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">p_Functionalloginid</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S01_Complain_Closure" enabled="false">
        <stringProp name="ThreadGroup.num_threads">25</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${Rampup}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${Duration}</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_Complain Closure_T01_GetList" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;PWSESSIONRS&quot;: {&#xd;
    &quot;PWPROCESSRS&quot;: {&#xd;
      &quot;PWDATA&quot;: {&#xd;
        &quot;EMP_COMPLAINT_MASTER_V2&quot;: {&#xd;
          &quot;Row&quot;: [&#xd;
            {&#xd;
              &quot;0&quot;: &quot;%Delhi%&quot;,&#xd;
              &quot;1&quot;: &quot;Service&quot;,&#xd;
              &quot;2&quot;: &quot;1&quot;,&#xd;
              &quot;3&quot;: &quot;15&quot;,&#xd;
              &quot;4&quot;: &quot;Open&quot;,&#xd;
              &quot;5&quot;: &quot;All&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      &quot;PWERROR&quot;: {},&#xd;
      &quot;PWHEADER&quot;: {&#xd;
        &quot;LOGIN_ID&quot;: &quot;${p_Functionalloginid}&quot;,&#xd;
        &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;IN_PROCESS_ID&quot;: &quot;2&quot;,&#xd;
        &quot;OUT_PROCESS_ID&quot;: &quot;EMP_COMPLAINT_MASTER_V2&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/complainClosure/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="82362">Row</stringProp>
              <stringProp name="-1839152142">STATUS</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">34</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bearer Token-2" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;PWSESSIONRS&quot;: {&#xd;
    &quot;PWPROCESSRS&quot;: {&#xd;
      &quot;PWDATA&quot;: {&#xd;
        &quot;MB_Authentication_gmail&quot;: {&#xd;
          &quot;Row&quot;: [&#xd;
            {&#xd;
              &quot;0&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2MiOiJBTyBEZWxoaSIsImFwcFZlcnNpb24iOiIxMi43IiwiZ2VuZGVyIjoiZmVtYWxlIiwiYXBwX3ZlcnNpb24iOiIxLjAiLCJwYXRoIjoiaHR0cHM6Ly9tb2JpbGVhcHBzLmhlcm9tb3RvY29ycC5jb20vZHdhcHA_YXBwPUVNUExPWUVFIiwidWlkIjoic2hha3NoaS5uYWdwYWxAaGVyb21vdG9jb3JwLmNvbSIsImZ1bmN0aW9uIjoiU0FMRVMgQU5EIEFGVEVSIFNBTEVTIiwic2NvcGUiOiJhbGwiLCJ0b2tlbl90aW1lIjoiMjAyNC0xMC0xMCAxMDoyNDo0NyIsImdvb2dsZUFwaUtleSI6IkFJemFTeUNtLWJCVktZUzJnaVdPVkx6TU1Ed1FaQ0dLazN6S0lzMCIsImxhc3RfbG9naW4iOiIyMDI0LTEwLTEwIDA4OjM5OjM0IiwibW9iX25vIjoiOTU5OTIwMTE0OSIsImZvcmNlVXBkYXRlIjoiTiIsIm1lc3NhZ2UiOiIiLCJ0b2tlbiI6ImM2NmUzYTcyLTg2YzMtMTFlZi05ZTFjLWJhODRmYjhmMjAzMSIsIjAiOiIiLCJzdWJfbG9jYXRpb24iOiJBTyBEZWxoaSIsImFwcF9uYW1lIjoiSEVQIiwic3VjY2VzcyI6IjEiLCJncmFkZSI6Ik0xIiwiYWNjZXNzX2tleSI6ImM2NmUzYTcyLTg2YzMtMTFlZi05ZTFjLWJhODRmYjhmMjAzMSIsIm5hbWUiOiJUZXN0IiwibG9jYXRpb24iOiJXZXN0IFpvbmUiLCJkZXNpZ25hdGlvbiI6IlRFUlJJVE9SWSBNQU5BR0VSIC0gU0VSVklDRSIsInByb21wdCI6IiIsImVjX25vIjoiMTA4NDAiLCJleHAiOjE3Mjk0MDAwODd9.p4xbiuZ5nLuHi7NHZSepwciQb14Lj5ldmJ5MUFA03zU&quot;,&#xd;
              &quot;1&quot;: &quot;mobileapp5.rfm@heromotocorp.com&quot;,&#xd;
              &quot;2&quot;: &quot;0&quot;,&#xd;
              &quot;3&quot;: &quot;8.1&quot;,&#xd;
              &quot;4&quot;: &quot;IOS&quot;,&#xd;
              &quot;5&quot;: &quot;IOS&quot;,&#xd;
              &quot;6&quot;: &quot;&quot;,&#xd;
              &quot;7&quot;: null,&#xd;
              &quot;8&quot;: null,&#xd;
              &quot;9&quot;: null,&#xd;
              &quot;10&quot;: &quot;0&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      &quot;PWERROR&quot;: {},&#xd;
      &quot;PWHEADER&quot;: {&#xd;
        &quot;LOGIN_ID&quot;: &quot;vikas1.sharma@heromotocorp.com&quot;,&#xd;
        &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;IN_PROCESS_ID&quot;: &quot;17&quot;,&#xd;
        &quot;OUT_PROCESS_ID&quot;: &quot;MB_Authentication_gmail&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/complainClosure/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">e6198dd8-5852-4d1f-8f91-dbaa46e142da</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Compilant Details-3" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/complainClosure/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6STFOaUo5LmV5SnNiMk1pT2lKYVR5QkNZVzVuWVd4dmNtVWlMQ0poY0hCV1pYSnphVzl1SWpvaU1USXVOeUlzSW1kbGJtUmxjaUk2SWsxaGJHVWlMQ0poY0hCZmRtVnljMmx2YmlJNklqRXVNQ0lzSW5CaGRHZ2lPaUpvZEhSd2N6b3ZMMjF2WW1sc1pXRndjSE11YUdWeWIyMXZkRzlqYjNKd0xtTnZiUzlrZDJGd2NEOWhjSEE5UlUxUVRFOVpSVVVpTENKMWFXUWlPaUp0YjJKcGJHVmhjSEExTG5KbWJVQm9aWEp2Ylc5MGIyTnZjbkF1WTI5dElpd2lablZ1WTNScGIyNGlPaUpUUVV4RlV5QkJUa1FnUVVaVVJWSWdVMEZNUlZNaUxDSnpZMjl3WlNJNkltRnNiQ0lzSW5SdmEyVnVYM1JwYldVaU9pSXlNREkwTFRFd0xUQTNJREl5T2pFNU9qSTFJaXdpWjI5dloyeGxRWEJwUzJWNUlqb2lRVWw2WVZONVEyMHRZa0pXUzFsVE1tZHBWMDlXVEhwTlRVUjNVVnBEUjB0ck0zcExTWE13SWl3aWJHRnpkRjlzYjJkcGJpSTZJakl3TWpRdE1UQXRNRGNnTWpJNk1UWTZNeklpTENKdGIySmZibThpT2lJaUxDSm1iM0pqWlZWd1pHRjBaU0k2SWs0aUxDSnRaWE56WVdkbElqb2lJaXdpZEc5clpXNGlPaUl4WXpoa00yTmlNaTA0TkdOakxURXhaV1l0T1dVeFl5MWlZVGcwWm1JNFpqSXdNekVpTENJd0lqb2lJaXdpYzNWaVgyeHZZMkYwYVc5dUlqb2lXazhnUW1GdVoyRnNiM0psSWl3aVlYQndYMjVoYldVaU9pSklSVkFpTENKemRXTmpaWE56SWpvaU1TSXNJbWR5WVdSbElqb2lSVFVpTENKaFkyTmxjM05mYTJWNUlqb2lNV000WkROallqSXRPRFJqWXkweE1XVm1MVGxsTVdNdFltRTROR1ppT0dZeU1ETXhJaXdpYm1GdFpTSTZJbEIxYm1WbGRDSXNJbXh2WTJGMGFXOXVJam9pVTI5MWRHZ2dXbTl1WlNJc0ltUmxjMmxuYm1GMGFXOXVJam9pVkVWU1VrbFVUMUpaSUUxQlRrRkhSVklnTFNCVFJWSldTVU5GSWl3aWNISnZiWEIwSWpvaUlpd2laV05mYm04aU9pSXhOelV5TkNJc0ltVjRjQ0k2TVRjeU9URTRNemMyTlgwLkpDaHlhRE5FMHJqWDVzMHJQeklxQjRjUnNOdUlWOVVSZlprVXY3a0ZXQVU=</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">ca941700-edf2-4493-8843-a542c05cc1b7</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S02_CPAS" enabled="false">
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${Rampup}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${Duration}</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Loginid" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">C:/Hero_Hub_Mobile(Previous)/TestData/Loginid.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">p_emailid,p_loginid</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Saveq" enabled="true">
          <stringProp name="filename">C:/Hero_Hub_Mobile(Previous)/TestData/Saveq.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">p_emailid1,p_Loginid1</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_CPAS_T01_Ho Panel" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
            &quot;PWDATA&quot;: {&#xd;
                &quot;APICALL&quot;: {&#xd;
                    &quot;Row&quot;: [&#xd;
                        {&#xd;
                            &quot;0&quot;: &quot;${p_emailid}&quot;,&#xd;
                            &quot;1&quot;: &quot;eyJjb250ZW50LXR5cGUiOiJhcHBsaWNhdGlvbi9qc29uIiwibWFnaWNfdG9rZW4iOiIvaUMram9FTVhWeDBhTEtCMnJBa3h4ZDJPYTNqOUFDTkdnazR4WlNUOU1VPSJ9&quot;,&#xd;
                            &quot;2&quot;: &quot;cpas_getallrequests&quot;,&#xd;
                            &quot;3&quot;: &quot;1&quot;,&#xd;
                            &quot;4&quot;: &quot;&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            &quot;PWERROR&quot;: {},&#xd;
            &quot;PWHEADER&quot;: {&#xd;
                &quot;LOGIN_ID&quot;: &quot;${p_loginid}&quot;,&#xd;
                &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;IN_PROCESS_ID&quot;: &quot;11&quot;,&#xd;
                &quot;OUT_PROCESS_ID&quot;: &quot;APICALL&quot;&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/cpas/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1848018809">isSuccess</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_CPAS_T02_Ho Panel Location" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
            &quot;PWDATA&quot;: {&#xd;
                &quot;APICALL&quot;: {&#xd;
                    &quot;Row&quot;: [&#xd;
                        {&#xd;
                            &quot;0&quot;: &quot;${p_emailid}&quot;,&#xd;
                            &quot;1&quot;: &quot;eyJjb250ZW50LXR5cGUiOiJhcHBsaWNhdGlvbi9qc29uIiwibWFnaWNfdG9rZW4iOiIvaUMram9FTVhWeDBhTEtCMnJBa3h4ZDJPYTNqOUFDTkdnazR4WlNUOU1VPSJ9&quot;,&#xd;
                            &quot;2&quot;: &quot;cpas_getallLocation&quot;,&#xd;
                            &quot;3&quot;: &quot;1&quot;,&#xd;
                            &quot;4&quot;: &quot;&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            &quot;PWERROR&quot;: {},&#xd;
            &quot;PWHEADER&quot;: {&#xd;
                &quot;LOGIN_ID&quot;: &quot;${p_loginid}&quot;,&#xd;
                &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;IN_PROCESS_ID&quot;: &quot;11&quot;,&#xd;
                &quot;OUT_PROCESS_ID&quot;: &quot;APICALL&quot;&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/cpas/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1848018809">isSuccess</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_CPAS_T03_Ho Panel Get Question List-6" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
            &quot;PWDATA&quot;: {&#xd;
                &quot;APICALL&quot;: {&#xd;
                    &quot;Row&quot;: [&#xd;
                        {&#xd;
                            &quot;0&quot;: &quot;${p_emailid}&quot;,&#xd;
                            &quot;1&quot;: &quot;eyJjb250ZW50LXR5cGUiOiJhcHBsaWNhdGlvbi9qc29uIiwibWFnaWNfdG9rZW4iOiIvaUMram9FTVhWeDBhTEtCMnJBa3h4ZDJPYTNqOUFDTkdnazR4WlNUOU1VPSJ9&quot;,&#xd;
                            &quot;2&quot;: &quot;cpas_getHOpanelrequests_test&quot;,&#xd;
                            &quot;3&quot;: &quot;1&quot;,&#xd;
                            &quot;4&quot;: &quot;&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            &quot;PWERROR&quot;: {},&#xd;
            &quot;PWHEADER&quot;: {&#xd;
                &quot;LOGIN_ID&quot;: &quot;${p_loginid}&quot;,&#xd;
                &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;IN_PROCESS_ID&quot;: &quot;11&quot;,&#xd;
                &quot;OUT_PROCESS_ID&quot;: &quot;APICALL&quot;&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/cpas/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1848018809">isSuccess</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="false">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_CPAS_T04_Ho Panel Save Question" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
            &quot;PWDATA&quot;: {&#xd;
                &quot;APICALL&quot;: {&#xd;
                    &quot;Row&quot;: [&#xd;
                        {&#xd;
                            &quot;0&quot;: &quot;${p_emailid1}&quot;,&#xd;
                            &quot;1&quot;: &quot;eyJjb250ZW50LXR5cGUiOiJhcHBsaWNhdGlvbi9qc29uIiwibWFnaWNfdG9rZW4iOiIvaUMram9FTVhWeDBhTEtCMnJBa3h4ZDJPYTNqOUFDTkdnazR4WlNUOU1VPSJ9&quot;,&#xd;
                            &quot;2&quot;: &quot;cpas_submitHOpanelrequest_test&quot;,&#xd;
                            &quot;3&quot;: &quot;1&quot;,&#xd;
                            &quot;4&quot;: &quot;&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            &quot;PWERROR&quot;: {},&#xd;
            &quot;PWHEADER&quot;: {&#xd;
                &quot;LOGIN_ID&quot;: &quot;${p_Loginid1}&quot;,&#xd;
                &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;IN_PROCESS_ID&quot;: &quot;11&quot;,&#xd;
                &quot;OUT_PROCESS_ID&quot;: &quot;APICALL&quot;&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/cpas/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1848018809">isSuccess</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ho Panel Bearer Token-8" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;PWSESSIONRS&quot;: {&#xd;
    &quot;PWPROCESSRS&quot;: {&#xd;
      &quot;PWDATA&quot;: {&#xd;
        &quot;MB_Authentication_gmail&quot;: {&#xd;
          &quot;Row&quot;: [&#xd;
            {&#xd;
              &quot;0&quot;: &quot;eyJhbGciOiJSUzI1NiIsImtpZCI6ImUyNmQ5MTdiMWZlOGRlMTMzODJhYTdjYzlhMWQ2ZTkzMjYyZjMzZTIiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiI3NDQ4Nzk2MDExODYtZ2RocmFjZTVhdTBjOGs2b2xkbWx1bXY2ZGI5bnQ4cmYuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJhdWQiOiI3NDQ4Nzk2MDExODYtZ2RocmFjZTVhdTBjOGs2b2xkbWx1bXY2ZGI5bnQ4cmYuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJzdWIiOiIxMTgzNzY5NDY4MDUyOTE4NzcwNTciLCJoZCI6Imhlcm9tb3RvY29ycC5jb20iLCJlbWFpbCI6InNhY2hpbi5nZW9yZ2UuZXh0QGhlcm9tb3RvY29ycC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwibmJmIjoxNzIyMzI5NTkzLCJuYW1lIjoiU2FjaGluIEdlb3JnZSIsInBpY3R1cmUiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQ2c4b2NLbnNxUURQWEJ4VXdCOEVEcFEyTVVYdG1YTEEtMUxfajVWTlVCYWhCVEhhRXpqUnc9czk2LWMiLCJnaXZlbl9uYW1lIjoiU2FjaGluIiwiZmFtaWx5X25hbWUiOiJHZW9yZ2UiLCJpYXQiOjE3MjIzMjk4OTMsImV4cCI6MTcyMjMzMzQ5MywianRpIjoiNGNiZDM0ZGFkZThlYjNlYThjYjRlNTZjNDNhZTkxOGRjMjVmZjY2ZCJ9.chj-RREiCFTJDYOonyVCdH9kTDG8OO9mqgIoHhxQb1EINO6thST3nP1iB9pB4Z5jnVU5BZ0Hle3aNfg4Vw0gt1NaeBSTb0FSeywWixvN9vSRKCJKcAgUl9x4qPuWi3tJ1HrqNuScQ2-dYD3cw6NlevilWoDnUcTp7E1tRgig3gwJ8YzboZbmY5Wq-ijwiDwR2B-tGR8KIpayuKdy3olrS6MCwszkjX3v7EpjHMOrZ_E69vG7cTHSS0GsbISf4LppKyQMrMlIzN4-wrZvWxZNtZIJ-_RJ6u1yJyopaijpjRSVNGUQ72GY_HWO43mtCULjyAdTNga4lpsTmZ1CdX1WGA&quot;,&#xd;
              &quot;1&quot;: &quot;sachin.george.ext@heromotocorp.com&quot;,&#xd;
              &quot;2&quot;: &quot;0&quot;,&#xd;
              &quot;3&quot;: &quot;8.1&quot;,&#xd;
              &quot;4&quot;: &quot;IOS&quot;,&#xd;
              &quot;5&quot;: &quot;IOS&quot;,&#xd;
              &quot;6&quot;: &quot;&quot;,&#xd;
              &quot;7&quot;: null,&#xd;
              &quot;8&quot;: null,&#xd;
              &quot;9&quot;: null,&#xd;
              &quot;10&quot;: &quot;0&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      &quot;PWERROR&quot;: {},&#xd;
      &quot;PWHEADER&quot;: {&#xd;
        &quot;LOGIN_ID&quot;: &quot;sachin.george.ext@heromotocorp.com&quot;,&#xd;
        &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;IN_PROCESS_ID&quot;: &quot;17&quot;,&#xd;
        &quot;OUT_PROCESS_ID&quot;: &quot;MB_Authentication_gmail&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/rfc/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">4eff6230-3f7c-4d5e-acc6-7cd946c11ad7</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ho Panel Submit Question-9" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
            &quot;PWDATA&quot;: {&#xd;
                &quot;APICALL&quot;: {&#xd;
                    &quot;Row&quot;: [&#xd;
                        {&#xd;
                            &quot;0&quot;: &quot;eyJEUlMiOiJ7XCJJRFwiOjQwOSxcIkRFQUxFUl9OQU1FXCI6XCJNci4gVklLUkFNIFBSRU0gREFMTUlBXCIsXCJVTklRVUVfSURcIjpcIlRUTzlCTFc3NVI5RlwiLFwiQ09NUEFOWVwiOlwiREFMTUlBIEJVSUxEQ09OXCIsXCJERUFMRVJfQ0lUWVwiOlwiUHVuZVwiLFwiREVBTEVSX1NUQVRFXCI6XCJNYWhhcmFzaHRyYVwiLFwiUkVRX1NUQVRVU1wiOlwiU0hQXCIsXCJBUFBMWUlOR0ZPUlwiOlwiRGVhbGVyc2hpcFwiLFwiU2NvcmVcIjpcIlwiLFwiUmFua0RcIjpcIlwiLFwiQXBleFF1ZXN0dGlvblNldFwiOntcIlFVRVNUSU9OMVwiOlwiTWFuYWdpbmcgcGVyc29uIHByb2ZpbGUgJiBjYXBhYmlsaXR5IHRvIGhhbmRsZSBIZXJvIGJ1c2luZXNzXCIsXCJRVUVTVElPTjJcIjpcIkJ1c2luZXNzIHJlbGV2YW5jZS8gQ3VzdG9tZXIgb3JpZW50YXRpb24gJiBGb2N1c1wiLFwiUVVFU1RJT04zXCI6XCJDb21wZXRpdGl2ZSBsZXZlbHMgYW5kIHBlcmZvcm1hbmNlIGluIGN1cnJlbnQgYnVzaW5lc3NcIixcIlFVRVNUSU9ONFwiOlwiRmluYW5jaWFsIHN0cmVuZ3RoXCIsXCJRVUVTVElPTjVcIjpcIlNvY2lhbCBzdGFuZGluZy8gUmVzaWRlbnQvIExvY2FsIGluZmx1ZW5jZS8gUmVwdXRhdGlvblwiLFwiUVVFU1RJT042XCI6XCJDcml0aWNhbGl0eSBvZiBITUNMIGJ1c2luZXNzIHRvIHRoZSBvdmVyYWxsIGJ1c2luZXNzIG9mIHRoZSBhcHBsaWNhbnRcIixcIkFOU1dFUjFcIjpudWxsLFwiQU5TV0VSMlwiOm51bGwsXCJBTlNXRVIzXCI6bnVsbCxcIkFOU1dFUjRcIjpudWxsLFwiQU5TV0VSNVwiOm51bGwsXCJBTlNXRVI2XCI6bnVsbCxcIlRPVEFMXCI6MH0sXCJIT1BRdWVzdHRpb25TZXRcIjp7XCJRVUVTVElPTjFcIjpcIlExLiBDbGFyaXR5IG9uIENvbnN0aXR1dGlvblwiLFwiUVVFU1RJT04yXCI6XCJRMiAoYSkuIE1hbmFnaW5nIFBlcnNvblwiLFwiUVVFU1RJT04zXCI6XCJRMiAoYikuIEFnZVwiLFwiUVVFU1RJT040XCI6XCJRMiAoYykgLiBCdXNpbmVzcyBFeHBlcmllbmNlXCIsXCJRVUVTVElPTjVcIjpcIlEzLiBCdXNpbmVzcyBCYWNrZ3JvdW5kLyBDdXN0b21lciBvcmllbnRhdGlvbiAmIEZvY3VzXCIsXCJRVUVTVElPTjZcIjpcIlE0IChhKS4gVXNlIG9mIElUIHN5c3RlbXMgJiBuZXcgdGVjaG5vbG9neSBpbiBjdXJyZW50IGJ1c2luZXNzXCIsXCJRVUVTVElPTjdcIjpcIlE0IChiKS5PbmxpbmUgdHJhbnNhY3Rpb24gaW4gY3VycmVudCBidXNpbmVzc1wiLFwiUVVFU1RJT044XCI6XCJRNSAoYSkuIENvbXBldGl0aXZlIGxldmVscyBhbmQgUGVyZm9ybWFuY2UgaW4gY3VycmVudCBidXNpbmVzc1wiLFwiUVVFU1RJT045XCI6XCJRNSAoYikuIFJld2FyZCBhbmQgUmVjb2duaXRpb25cIixcIlFVRVNUSU9OMTBcIjpcIlE2LiBGaW5hbmNpYWwgU3RyZW5ndGhcIixcIlFVRVNUSU9OMTFcIjpcIlE3IChhKS4gTG9jYXRpb24sc2hvd3Jvb21cIixcIlFVRVNUSU9OMTJcIjpcIlE3IChiKS4gTG9jYXRpb24sd2FyZWhvdXNlXCIsXCJRVUVTVElPTjEzXCI6XCJROC4gTWFucG93ZXI6IFF1YWxpZmllZC8gRXhwZXJpZW5jZWQvIFByb2Zlc3Npb25hbChpbiBjdXJyZW50IGJ1c2luZXNzKVwiLFwiUVVFU1RJT04xNFwiOlwiUTkgKGEpLiBTb2NpYWwgU3RhbmRpbmcvIFJlc2lkZW50LyBMb2NhbCBpbmZsdWVuY2UvIFJlcHV0YXRpb25cIixcIlFVRVNUSU9OMTVcIjpcIlE5IChiKS4gTWVtYmVyIG9mIGxvY2FsIGNsdWJzKExpb25zIENsdWIsUm90YXJ5IENsdWIpXCIsXCJRVUVTVElPTjE2XCI6XCJRMTAuIENyaXRpY2FsaXR5IG9mIEhNQ0wgYnVzaW5lc3MgYmUgdG8gdGhlIG92ZXJhbGwgYnVzaW5lc3Mgb2YgdGhlIGFwcGxpY2FudFwiLFwiQU5TV0VSMVwiOlwiM1wiLFwiQU5TV0VSMlwiOlwiMlwiLFwiQU5TV0VSM1wiOlwiMVwiLFwiQU5TV0VSNFwiOlwiMVwiLFwiQU5TV0VSNVwiOlwiMTBcIixcIkFOU1dFUjZcIjpcIjBcIixcIkFOU1dFUjdcIjpcIjNcIixcIkFOU1dFUjhcIjpcIjBcIixcIkFOU1dFUjlcIjpcIjVcIixcIkFOU1dFUjEwXCI6XCIxMFwiLFwiQU5TV0VSMTFcIjpcIjVcIixcIkFOU1dFUjEyXCI6XCI1XCIsXCJBTlNXRVIxM1wiOlwiMTBcIixcIkFOU1dFUjE0XCI6XCI2XCIsXCJBTlNXRVIxNVwiOlwiNVwiLFwiQU5TV0VSMTZcIjpcIjhcIixcIlRPVEFMXCI6NzR9LFwiUkFUSU5HXCI6e1wiUlNfSURcIjozOTUsXCJSU19VTklRVUVfSURcIjpcIlRUTzlCTFc3NVI5RlwiLFwiUlNfQVBQTF9UWVBFXCI6bnVsbCxcIlJTX0NPTlNUSVRVVElPTlwiOjUsXCJSU19DT05TVElUVVRJT05fUkVNQVJLU1wiOm51bGwsXCJSU19FWFBFUklFTkNFXCI6NyxcIlJTX0VYUEVSSUVOQ0VfUkVNQVJLU1wiOm51bGwsXCJSU19DVVNUX1NFUlZJQ0VcIjo4LFwiUlNfQ1VTVF9TRVJWSUNFX1JFTUFSS1NcIjpudWxsLFwiUlNfSU5GUkFTVFJVQ1RVUkVcIjo4LFwiUlNfSU5GUkFTVFJVQ1RVUkVfUkVNQVJLU1wiOm51bGwsXCJSU19DT01QRVRJVElWRV9MRVZFTFwiOjcsXCJSU19DT01QRVRJVElWRV9MRVZFTF9SRU1BUktTXCI6bnVsbCxcIlJTX0ZJTkFOQ0lBTF9TVFJFTkdUSFwiOjgsXCJSU19GSU5BTkNJQUxfU1RSRU5HVEhfUkVNQVJLU1wiOm51bGwsXCJSU19MT0NBVElPTlwiOjgsXCJSU19MT0NBVElPTl9SRU1BUktTXCI6bnVsbCxcIlJTX01BTlBPV0VSXCI6OCxcIlJTX01BTlBPV0VSX1JFTUFSS1NcIjpudWxsLFwiUlNfU09DSUFMX1NUQU5ESU5HXCI6NixcIlJTX1NPQ0lBTF9TVEFORElOR19SRU1BUktTXCI6bnVsbCxcIlJTX0hNQ0xcIjo4LFwiUlNfSE1DTF9SRU1BUktTXCI6bnVsbCxcIlJTX1RPVEFMXCI6NzMsXCJSU19DUkVBVEVSX1JPTEVcIjpcIkhDQURcIixcIlJTX0NSRUFURURfQllcIjpudWxsLFwiUlNfQ1JFQVRFRF9EQVRFXCI6bnVsbCxcIlJTX1VQREFURURfQllcIjpudWxsLFwiUlNfVVBEQVRFRF9EQVRFXCI6bnVsbCxcIlJTX1BSU05fUFJPRkxcIjpudWxsLFwiUlNfUFJTTl9QUk9GTF9SRU1BUktTXCI6bnVsbCxcIlJTX0lOVFJfSU5fQlNOU1wiOm51bGwsXCJSU19JTlRSX0lOX0JTTlNfUkVNQVJLU1wiOm51bGwsXCJSQU5LXCI6bnVsbCxcImNtbl9SRU1BUktTXCI6bnVsbCxcIlJTX0FHRVwiOm51bGwsXCJSU19CVVNJTkVTU1wiOm51bGwsXCJSU19PTkxJTkVcIjpudWxsLFwiUlNfV0FSRUhPVVNFXCI6bnVsbCxcIlJTX1JFV0FSRFwiOm51bGwsXCJSU19DTFVCXCI6bnVsbCxcIlJTX0NPTlNUSVRVVElPTl9TQ09SRVwiOm51bGwsXCJSU19FWFBFUklFTkNFX1NDT1JFXCI6bnVsbCxcIlJTX0FHRV9TQ09SRVwiOm51bGwsXCJSU19CVVNJTkVTU19TQ09SRVwiOm51bGwsXCJSU19DVVNUX1NFUlZJQ0VfU0NPUkVcIjpudWxsLFwiUlNfSU5GUkFTVFJVQ1RVUkVfU0NPUkVcIjpudWxsLFwiUlNfT05MSU5FX1NDT1JFXCI6bnVsbCxcIlJTX0NPTVBFVElUSVZFX0xFVkVMX1NDT1JFXCI6bnVsbCxcIlJTX1JFV0FSRF9TQ09SRVwiOm51bGwsXCJSU19GSU5BTkNJQUxfU1RSRU5HVEhfU0NPUkVcIjpudWxsLFwiUlNfTE9DQVRJT05fU0NPUkVcIjpudWxsLFwiUlNfV0FSRUhPVVNFX1NDT1JFXCI6bnVsbCxcIlJTX01BTlBPV0VSX1NDT1JFXCI6bnVsbCxcIlJTX1NPQ0lBTF9TVEFORElOR19TQ09SRVwiOm51bGwsXCJSU19DTFVCX1NDT1JFXCI6bnVsbCxcIlJTX0hNQ0xfU0NPUkVcIjpudWxsfSxcIkVWQUxVQVRJT05TQ09SRVwiOntcIlpIVG90YWxcIjpudWxsLFwiSENBRFRvdGFsXCI6bnVsbCxcIk5TUkhUb3RhbFwiOm51bGwsXCJOU0hUb3RhbFwiOm51bGwsXCJGSU5Ub3RhbFwiOm51bGx9LFwiU09QX1JFUVVFU1RcIjpudWxsLFwiaXNTdWJtaXR0ZWRcIjp0cnVlLFwiVE9UQUxcIjo3NCxcIlJFTUFSS1wiOlwidGVzdGltbmcgd2l0aCBzaGFrc2hpIG5hZ3BhbCB0ZXN0aW5nZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dcIixcIlNUQVRVU1wiOlwiU1wiLFwiRUNOT1wiOlwiMTQxNTBcIixcIkVtYWlsSWRcIjpcIm5pdGluLmthZ2FqaUBoZXJvbW90b2NvcnAuY29tXCJ9In0=&quot;,&#xd;
                            &quot;1&quot;: &quot;eyJjb250ZW50LXR5cGUiOiJhcHBsaWNhdGlvbi9qc29uIiwibWFnaWNfdG9rZW4iOiIvaUMram9FTVhWeDBhTEtCMnJBa3h4ZDJPYTNqOUFDTkdnazR4WlNUOU1VPSJ9&quot;,&#xd;
                            &quot;2&quot;: &quot;cpas_submitHOpanelrequest_test&quot;,&#xd;
                            &quot;3&quot;: &quot;1&quot;,&#xd;
                            &quot;4&quot;: &quot;&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            &quot;PWERROR&quot;: {},&#xd;
            &quot;PWHEADER&quot;: {&#xd;
                &quot;LOGIN_ID&quot;: &quot;nitin.kagaji@heromotocorp.com&quot;,&#xd;
                &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;IN_PROCESS_ID&quot;: &quot;11&quot;,&#xd;
                &quot;OUT_PROCESS_ID&quot;: &quot;APICALL&quot;&#xd;
            }&#xd;
        }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/cpas/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1600979865">Unauthorized Activity Detected</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S02_CPAS_T05_Ho Panel Submit Question-9" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
            &quot;PWDATA&quot;: {&#xd;
                &quot;APICALL&quot;: {&#xd;
                    &quot;Row&quot;: [&#xd;
                        {&#xd;
                            &quot;0&quot;: &quot;eyJEUlMiOiJ7XCJJRFwiOjQwOSxcIkRFQUxFUl9OQU1FXCI6XCJNci4gVklLUkFNIFBSRU0gREFMTUlBXCIsXCJVTklRVUVfSURcIjpcIlRUTzlCTFc3NVI5RlwiLFwiQ09NUEFOWVwiOlwiREFMTUlBIEJVSUxEQ09OXCIsXCJERUFMRVJfQ0lUWVwiOlwiUHVuZVwiLFwiREVBTEVSX1NUQVRFXCI6XCJNYWhhcmFzaHRyYVwiLFwiUkVRX1NUQVRVU1wiOlwiU0hQXCIsXCJBUFBMWUlOR0ZPUlwiOlwiRGVhbGVyc2hpcFwiLFwiU2NvcmVcIjpcIlwiLFwiUmFua0RcIjpcIlwiLFwiQXBleFF1ZXN0dGlvblNldFwiOntcIlFVRVNUSU9OMVwiOlwiTWFuYWdpbmcgcGVyc29uIHByb2ZpbGUgJiBjYXBhYmlsaXR5IHRvIGhhbmRsZSBIZXJvIGJ1c2luZXNzXCIsXCJRVUVTVElPTjJcIjpcIkJ1c2luZXNzIHJlbGV2YW5jZS8gQ3VzdG9tZXIgb3JpZW50YXRpb24gJiBGb2N1c1wiLFwiUVVFU1RJT04zXCI6XCJDb21wZXRpdGl2ZSBsZXZlbHMgYW5kIHBlcmZvcm1hbmNlIGluIGN1cnJlbnQgYnVzaW5lc3NcIixcIlFVRVNUSU9ONFwiOlwiRmluYW5jaWFsIHN0cmVuZ3RoXCIsXCJRVUVTVElPTjVcIjpcIlNvY2lhbCBzdGFuZGluZy8gUmVzaWRlbnQvIExvY2FsIGluZmx1ZW5jZS8gUmVwdXRhdGlvblwiLFwiUVVFU1RJT042XCI6XCJDcml0aWNhbGl0eSBvZiBITUNMIGJ1c2luZXNzIHRvIHRoZSBvdmVyYWxsIGJ1c2luZXNzIG9mIHRoZSBhcHBsaWNhbnRcIixcIkFOU1dFUjFcIjpudWxsLFwiQU5TV0VSMlwiOm51bGwsXCJBTlNXRVIzXCI6bnVsbCxcIkFOU1dFUjRcIjpudWxsLFwiQU5TV0VSNVwiOm51bGwsXCJBTlNXRVI2XCI6bnVsbCxcIlRPVEFMXCI6MH0sXCJIT1BRdWVzdHRpb25TZXRcIjp7XCJRVUVTVElPTjFcIjpcIlExLiBDbGFyaXR5IG9uIENvbnN0aXR1dGlvblwiLFwiUVVFU1RJT04yXCI6XCJRMiAoYSkuIE1hbmFnaW5nIFBlcnNvblwiLFwiUVVFU1RJT04zXCI6XCJRMiAoYikuIEFnZVwiLFwiUVVFU1RJT040XCI6XCJRMiAoYykgLiBCdXNpbmVzcyBFeHBlcmllbmNlXCIsXCJRVUVTVElPTjVcIjpcIlEzLiBCdXNpbmVzcyBCYWNrZ3JvdW5kLyBDdXN0b21lciBvcmllbnRhdGlvbiAmIEZvY3VzXCIsXCJRVUVTVElPTjZcIjpcIlE0IChhKS4gVXNlIG9mIElUIHN5c3RlbXMgJiBuZXcgdGVjaG5vbG9neSBpbiBjdXJyZW50IGJ1c2luZXNzXCIsXCJRVUVTVElPTjdcIjpcIlE0IChiKS5PbmxpbmUgdHJhbnNhY3Rpb24gaW4gY3VycmVudCBidXNpbmVzc1wiLFwiUVVFU1RJT044XCI6XCJRNSAoYSkuIENvbXBldGl0aXZlIGxldmVscyBhbmQgUGVyZm9ybWFuY2UgaW4gY3VycmVudCBidXNpbmVzc1wiLFwiUVVFU1RJT045XCI6XCJRNSAoYikuIFJld2FyZCBhbmQgUmVjb2duaXRpb25cIixcIlFVRVNUSU9OMTBcIjpcIlE2LiBGaW5hbmNpYWwgU3RyZW5ndGhcIixcIlFVRVNUSU9OMTFcIjpcIlE3IChhKS4gTG9jYXRpb24sc2hvd3Jvb21cIixcIlFVRVNUSU9OMTJcIjpcIlE3IChiKS4gTG9jYXRpb24sd2FyZWhvdXNlXCIsXCJRVUVTVElPTjEzXCI6XCJROC4gTWFucG93ZXI6IFF1YWxpZmllZC8gRXhwZXJpZW5jZWQvIFByb2Zlc3Npb25hbChpbiBjdXJyZW50IGJ1c2luZXNzKVwiLFwiUVVFU1RJT04xNFwiOlwiUTkgKGEpLiBTb2NpYWwgU3RhbmRpbmcvIFJlc2lkZW50LyBMb2NhbCBpbmZsdWVuY2UvIFJlcHV0YXRpb25cIixcIlFVRVNUSU9OMTVcIjpcIlE5IChiKS4gTWVtYmVyIG9mIGxvY2FsIGNsdWJzKExpb25zIENsdWIsUm90YXJ5IENsdWIpXCIsXCJRVUVTVElPTjE2XCI6XCJRMTAuIENyaXRpY2FsaXR5IG9mIEhNQ0wgYnVzaW5lc3MgYmUgdG8gdGhlIG92ZXJhbGwgYnVzaW5lc3Mgb2YgdGhlIGFwcGxpY2FudFwiLFwiQU5TV0VSMVwiOlwiM1wiLFwiQU5TV0VSMlwiOlwiMlwiLFwiQU5TV0VSM1wiOlwiMVwiLFwiQU5TV0VSNFwiOlwiMVwiLFwiQU5TV0VSNVwiOlwiMTBcIixcIkFOU1dFUjZcIjpcIjBcIixcIkFOU1dFUjdcIjpcIjNcIixcIkFOU1dFUjhcIjpcIjBcIixcIkFOU1dFUjlcIjpcIjVcIixcIkFOU1dFUjEwXCI6XCIxMFwiLFwiQU5TV0VSMTFcIjpcIjVcIixcIkFOU1dFUjEyXCI6XCI1XCIsXCJBTlNXRVIxM1wiOlwiMTBcIixcIkFOU1dFUjE0XCI6XCI2XCIsXCJBTlNXRVIxNVwiOlwiNVwiLFwiQU5TV0VSMTZcIjpcIjhcIixcIlRPVEFMXCI6NzR9LFwiUkFUSU5HXCI6e1wiUlNfSURcIjozOTUsXCJSU19VTklRVUVfSURcIjpcIlRUTzlCTFc3NVI5RlwiLFwiUlNfQVBQTF9UWVBFXCI6bnVsbCxcIlJTX0NPTlNUSVRVVElPTlwiOjUsXCJSU19DT05TVElUVVRJT05fUkVNQVJLU1wiOm51bGwsXCJSU19FWFBFUklFTkNFXCI6NyxcIlJTX0VYUEVSSUVOQ0VfUkVNQVJLU1wiOm51bGwsXCJSU19DVVNUX1NFUlZJQ0VcIjo4LFwiUlNfQ1VTVF9TRVJWSUNFX1JFTUFSS1NcIjpudWxsLFwiUlNfSU5GUkFTVFJVQ1RVUkVcIjo4LFwiUlNfSU5GUkFTVFJVQ1RVUkVfUkVNQVJLU1wiOm51bGwsXCJSU19DT01QRVRJVElWRV9MRVZFTFwiOjcsXCJSU19DT01QRVRJVElWRV9MRVZFTF9SRU1BUktTXCI6bnVsbCxcIlJTX0ZJTkFOQ0lBTF9TVFJFTkdUSFwiOjgsXCJSU19GSU5BTkNJQUxfU1RSRU5HVEhfUkVNQVJLU1wiOm51bGwsXCJSU19MT0NBVElPTlwiOjgsXCJSU19MT0NBVElPTl9SRU1BUktTXCI6bnVsbCxcIlJTX01BTlBPV0VSXCI6OCxcIlJTX01BTlBPV0VSX1JFTUFSS1NcIjpudWxsLFwiUlNfU09DSUFMX1NUQU5ESU5HXCI6NixcIlJTX1NPQ0lBTF9TVEFORElOR19SRU1BUktTXCI6bnVsbCxcIlJTX0hNQ0xcIjo4LFwiUlNfSE1DTF9SRU1BUktTXCI6bnVsbCxcIlJTX1RPVEFMXCI6NzMsXCJSU19DUkVBVEVSX1JPTEVcIjpcIkhDQURcIixcIlJTX0NSRUFURURfQllcIjpudWxsLFwiUlNfQ1JFQVRFRF9EQVRFXCI6bnVsbCxcIlJTX1VQREFURURfQllcIjpudWxsLFwiUlNfVVBEQVRFRF9EQVRFXCI6bnVsbCxcIlJTX1BSU05fUFJPRkxcIjpudWxsLFwiUlNfUFJTTl9QUk9GTF9SRU1BUktTXCI6bnVsbCxcIlJTX0lOVFJfSU5fQlNOU1wiOm51bGwsXCJSU19JTlRSX0lOX0JTTlNfUkVNQVJLU1wiOm51bGwsXCJSQU5LXCI6bnVsbCxcImNtbl9SRU1BUktTXCI6bnVsbCxcIlJTX0FHRVwiOm51bGwsXCJSU19CVVNJTkVTU1wiOm51bGwsXCJSU19PTkxJTkVcIjpudWxsLFwiUlNfV0FSRUhPVVNFXCI6bnVsbCxcIlJTX1JFV0FSRFwiOm51bGwsXCJSU19DTFVCXCI6bnVsbCxcIlJTX0NPTlNUSVRVVElPTl9TQ09SRVwiOm51bGwsXCJSU19FWFBFUklFTkNFX1NDT1JFXCI6bnVsbCxcIlJTX0FHRV9TQ09SRVwiOm51bGwsXCJSU19CVVNJTkVTU19TQ09SRVwiOm51bGwsXCJSU19DVVNUX1NFUlZJQ0VfU0NPUkVcIjpudWxsLFwiUlNfSU5GUkFTVFJVQ1RVUkVfU0NPUkVcIjpudWxsLFwiUlNfT05MSU5FX1NDT1JFXCI6bnVsbCxcIlJTX0NPTVBFVElUSVZFX0xFVkVMX1NDT1JFXCI6bnVsbCxcIlJTX1JFV0FSRF9TQ09SRVwiOm51bGwsXCJSU19GSU5BTkNJQUxfU1RSRU5HVEhfU0NPUkVcIjpudWxsLFwiUlNfTE9DQVRJT05fU0NPUkVcIjpudWxsLFwiUlNfV0FSRUhPVVNFX1NDT1JFXCI6bnVsbCxcIlJTX01BTlBPV0VSX1NDT1JFXCI6bnVsbCxcIlJTX1NPQ0lBTF9TVEFORElOR19TQ09SRVwiOm51bGwsXCJSU19DTFVCX1NDT1JFXCI6bnVsbCxcIlJTX0hNQ0xfU0NPUkVcIjpudWxsfSxcIkVWQUxVQVRJT05TQ09SRVwiOntcIlpIVG90YWxcIjpudWxsLFwiSENBRFRvdGFsXCI6bnVsbCxcIk5TUkhUb3RhbFwiOm51bGwsXCJOU0hUb3RhbFwiOm51bGwsXCJGSU5Ub3RhbFwiOm51bGx9LFwiU09QX1JFUVVFU1RcIjpudWxsLFwiaXNTdWJtaXR0ZWRcIjp0cnVlLFwiVE9UQUxcIjo3NCxcIlJFTUFSS1wiOlwidGVzdGltbmcgd2l0aCBzaGFrc2hpIG5hZ3BhbCB0ZXN0aW5nZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dcIixcIlNUQVRVU1wiOlwiU1wiLFwiRUNOT1wiOlwiMjYzMFwiLFwiRW1haWxJZFwiOlwiQU1JVC5DSE9QUkFASEVST01PVE9DT1JQLkNPTVwifSJ9&quot;,&#xd;
                            &quot;1&quot;: &quot;eyJjb250ZW50LXR5cGUiOiJhcHBsaWNhdGlvbi9qc29uIiwibWFnaWNfdG9rZW4iOiIvaUMram9FTVhWeDBhTEtCMnJBa3h4ZDJPYTNqOUFDTkdnazR4WlNUOU1VPSJ9&quot;,&#xd;
                            &quot;2&quot;: &quot;cpas_submitHOpanelrequest_test&quot;,&#xd;
                            &quot;3&quot;: &quot;1&quot;,&#xd;
                            &quot;4&quot;: &quot;&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            &quot;PWERROR&quot;: {},&#xd;
            &quot;PWHEADER&quot;: {&#xd;
                &quot;LOGIN_ID&quot;: &quot;AMIT.CHOPRA@HEROMOTOCORP.COM&quot;,&#xd;
                &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;IN_PROCESS_ID&quot;: &quot;11&quot;,&#xd;
                &quot;OUT_PROCESS_ID&quot;: &quot;APICALL&quot;&#xd;
            }&#xd;
        }</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/cpas/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1600979865">Unauthorized Activity Detected</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S03_HighClaim" enabled="false">
        <stringProp name="ThreadGroup.num_threads">25</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${Rampup}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${Duration}</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_HighClaim_T01_HighClaim_List" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;PWSESSIONRS&quot;: {&#xd;
    &quot;PWPROCESSRS&quot;: {&#xd;
      &quot;PWDATA&quot;: {&#xd;
        &quot;EMP_HIGHVAL_LIST_V2&quot;: {&#xd;
          &quot;Row&quot;: [&#xd;
            {&#xd;
              &quot;0&quot;: &quot;Delhi&quot;,&#xd;
              &quot;1&quot;: &quot;&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      &quot;PWERROR&quot;: {},&#xd;
      &quot;PWHEADER&quot;: {&#xd;
        &quot;LOGIN_ID&quot;: &quot;${p_Functionalloginid}&quot;,&#xd;
        &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;IN_PROCESS_ID&quot;: &quot;2&quot;,&#xd;
        &quot;OUT_PROCESS_ID&quot;: &quot;EMP_HIGHVAL_LIST_V2&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/highclaim/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_JC_NUM1" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">c_JC_NUM1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;JC_NUM&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">JC_NUM1_NF</stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="73532169">MODEL</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_HighClaim_T02_HighClaimDetails" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;PWSESSIONRS&quot;: {&#xd;
    &quot;PWPROCESSRS&quot;: {&#xd;
      &quot;PWDATA&quot;: {&#xd;
        &quot;EMP_HIGHVAL_LIST_DETAILS_V2&quot;: {&#xd;
          &quot;Row&quot;: [&#xd;
            {&#xd;
              &quot;0&quot;: &quot;${c_JC_NUM1}&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      &quot;PWERROR&quot;: {},&#xd;
      &quot;PWHEADER&quot;: {&#xd;
        &quot;LOGIN_ID&quot;: &quot;${p_Functionalloginid}&quot;,&#xd;
        &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;IN_PROCESS_ID&quot;: &quot;2&quot;,&#xd;
        &quot;OUT_PROCESS_ID&quot;: &quot;EMP_HIGHVAL_LIST_DETAILS_V2&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/highclaim/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_VIN1" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">c_VIN1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;VIN&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">VIN1_NF</stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_ORDER_ID1" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_ORDER_ID1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;ORDER_ID&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">ORDER_ID_NF</stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_ORDER_ITEM_ID1" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_ORDER_ITEM_ID1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;ORDER_ITEM_ID&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">ORDER_ITEM_ID1_NF</stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_X_PRE_APPR_STAT1" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_X_PRE_APPR_STAT1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;X_PRE_APPR_STAT&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">X_PRE_APPR_STAT1_NF</stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1280602499">&quot;service_flag&quot;:&quot;1&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_HighClaim_T03_ServiceHistory" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;PWSESSIONRS&quot;: {&#xd;
    &quot;PWPROCESSRS&quot;: {&#xd;
      &quot;PWDATA&quot;: {&#xd;
        &quot;EMP_PAWARRANTY_SERVICE_HISTORY&quot;: {&#xd;
          &quot;Row&quot;: [&#xd;
            {&#xd;
              &quot;0&quot;: &quot;${c_VIN1}&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      &quot;PWERROR&quot;: {},&#xd;
      &quot;PWHEADER&quot;: {&#xd;
        &quot;LOGIN_ID&quot;: &quot;${p_Functionalloginid}&quot;,&#xd;
        &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;IN_PROCESS_ID&quot;: &quot;2&quot;,&#xd;
        &quot;OUT_PROCESS_ID&quot;: &quot;EMP_PAWARRANTY_SERVICE_HISTORY&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/highclaim/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2095961766">&quot;success&quot;:&quot;1&quot;</stringProp>
              <stringProp name="-550306223">&quot;success&quot;:&quot;0&quot;,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">34</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S03_HighClaim_T04_Submit_HighClaim" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;PWSESSIONRS&quot;: {&#xd;
    &quot;PWPROCESSRS&quot;: {&#xd;
      &quot;PWDATA&quot;: {&#xd;
        &quot;SIEBEL.EMP_PAWARRANTY_UPDATE_NEW_N&quot;: {&#xd;
          &quot;Row&quot;: [&#xd;
            {&#xd;
              &quot;0&quot;: &quot;tarun.kumar.ext@heromotocorp.com&quot;,&#xd;
              &quot;1&quot;: &quot;${C_ORDER_ITEM_ID1},${C_ORDER_ITEM_ID1}&quot;,&#xd;
              &quot;2&quot;: &quot;${C_X_PRE_APPR_STAT1},${C_X_PRE_APPR_STAT1}&quot;,&#xd;
              &quot;3&quot;: &quot;${C_ORDER_ID1}&quot;,&#xd;
              &quot;4&quot;: &quot;Others&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      &quot;PWERROR&quot;: {},&#xd;
      &quot;PWHEADER&quot;: {&#xd;
        &quot;LOGIN_ID&quot;: &quot;${p_Functionalloginid}&quot;,&#xd;
        &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;IN_PROCESS_ID&quot;: &quot;2&quot;,&#xd;
        &quot;OUT_PROCESS_ID&quot;: &quot;SIEBEL.EMP_PAWARRANTY_UPDATE_NEW_N&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/highclaim/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2095961766">&quot;success&quot;:&quot;1&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S04_PreWarranty" enabled="false">
        <stringProp name="ThreadGroup.num_threads">25</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${Rampup}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${Duration}</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_PreWarranty_T01_WarrantyApprovalList" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;PWSESSIONRS&quot;: {&#xd;
    &quot;PWPROCESSRS&quot;: {&#xd;
      &quot;PWDATA&quot;: {&#xd;
        &quot;EMP_PAWARRANTY_LIST_NEW_V2&quot;: {&#xd;
          &quot;Row&quot;: [&#xd;
            {&#xd;
              &quot;0&quot;: &quot;Delhi&quot;,&#xd;
              &quot;1&quot;: &quot;&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      &quot;PWERROR&quot;: {},&#xd;
      &quot;PWHEADER&quot;: {&#xd;
        &quot;LOGIN_ID&quot;: &quot;${p_Functionalloginid}&quot;,&#xd;
        &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;IN_PROCESS_ID&quot;: &quot;2&quot;,&#xd;
        &quot;OUT_PROCESS_ID&quot;: &quot;EMP_PAWARRANTY_LIST_NEW_V2&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/prewarranty/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_JC_NUM" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_JC_NUM</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;JC_NUM&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">C_JC_NUM_NF</stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="73532169">MODEL</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_PreWarranty_T02_WarrantyApprovalDetail" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;PWSESSIONRS&quot;: {&#xd;
    &quot;PWPROCESSRS&quot;: {&#xd;
      &quot;PWDATA&quot;: {&#xd;
        &quot;EMP_PAWARRANTY_LIST_DETAILS_V2&quot;: {&#xd;
          &quot;Row&quot;: [&#xd;
            {&#xd;
              &quot;0&quot;: &quot;${C_JC_NUM}&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      &quot;PWERROR&quot;: {},&#xd;
      &quot;PWHEADER&quot;: {&#xd;
        &quot;LOGIN_ID&quot;: &quot;${p_Functionalloginid}&quot;,&#xd;
        &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;IN_PROCESS_ID&quot;: &quot;2&quot;,&#xd;
        &quot;OUT_PROCESS_ID&quot;: &quot;EMP_PAWARRANTY_LIST_DETAILS_V2&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/prewarranty/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_VIN" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_VIN</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;VIN&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">C_VIN_NF</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_ORDER_ID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_ORDER_ID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;ORDER_ID&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">ORDER_ID_NF</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_ORDER_ITEM_ID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_ORDER_ITEM_ID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;ORDER_ITEM_ID&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">ORDER_ITEM_ID_NF</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_X_PRE_APPR_STAT" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">C_X_PRE_APPR_STAT</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;X_PRE_APPR_STAT&quot;:&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">X_PRE_APPR_STAT_NF</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1280602499">&quot;service_flag&quot;:&quot;1&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_PreWarranty_T03_ServiceHistory" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;PWSESSIONRS&quot;: {&#xd;
    &quot;PWPROCESSRS&quot;: {&#xd;
      &quot;PWDATA&quot;: {&#xd;
        &quot;EMP_PAWARRANTY_SERVICE_HISTORY&quot;: {&#xd;
          &quot;Row&quot;: [&#xd;
            {&#xd;
              &quot;0&quot;: &quot;${C_VIN}&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      &quot;PWERROR&quot;: {},&#xd;
      &quot;PWHEADER&quot;: {&#xd;
        &quot;LOGIN_ID&quot;: &quot;${p_Functionalloginid}&quot;,&#xd;
        &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;IN_PROCESS_ID&quot;: &quot;2&quot;,&#xd;
        &quot;OUT_PROCESS_ID&quot;: &quot;EMP_PAWARRANTY_SERVICE_HISTORY&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/prewarranty/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2095961766">&quot;success&quot;:&quot;1&quot;</stringProp>
              <stringProp name="-550306223">&quot;success&quot;:&quot;0&quot;,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">34</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S04_PreWarranty_T04_WarrantySubmit" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;PWSESSIONRS&quot;: {&#xd;
    &quot;PWPROCESSRS&quot;: {&#xd;
      &quot;PWDATA&quot;: {&#xd;
        &quot;SIEBEL.EMP_PAWARRANTY_UPDATE_NEW_N&quot;: {&#xd;
          &quot;Row&quot;: [&#xd;
            {&#xd;
              &quot;0&quot;: &quot;tarun.kumar.ext@heromotocorp.com&quot;,&#xd;
              &quot;1&quot;: &quot;${C_ORDER_ITEM_ID},${C_ORDER_ITEM_ID}&quot;,&#xd;
              &quot;2&quot;: &quot;${C_X_PRE_APPR_STAT},${C_X_PRE_APPR_STAT}&quot;,&#xd;
              &quot;3&quot;: &quot;${C_ORDER_ID}&quot;,&#xd;
              &quot;4&quot;: &quot;Out of Warranty Vehicle&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      &quot;PWERROR&quot;: {},&#xd;
      &quot;PWHEADER&quot;: {&#xd;
        &quot;LOGIN_ID&quot;: &quot;${p_Functionalloginid}&quot;,&#xd;
        &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;IN_PROCESS_ID&quot;: &quot;2&quot;,&#xd;
        &quot;OUT_PROCESS_ID&quot;: &quot;SIEBEL.EMP_PAWARRANTY_UPDATE_NEW_N&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/prewarranty/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">${C_ORDER_ID}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2095961766">&quot;success&quot;:&quot;1&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S05_VMS" enabled="false">
        <stringProp name="ThreadGroup.num_threads">25</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${Rampup}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${Duration}</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=" S05_VMS_T01_Dealer List" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;PWSESSIONRS&quot;: {&#xd;
    &quot;PWPROCESSRS&quot;: {&#xd;
      &quot;PWDATA&quot;: {&#xd;
        &quot;APICALL&quot;: {&#xd;
          &quot;Row&quot;: [&#xd;
            {&#xd;
              &quot;0&quot;: &quot;P2VtcF9jb2RlPTE0OTI1JnllYXI9MjAyMyZjeWNsZT1uZXc=&quot;,&#xd;
              &quot;1&quot;: &quot;eyJhcGlLZXkiOiJoWjhDQ1JyRjRIQmNNc25xTVNJdkNLZEJSQURZQURheUNsclNkUkx1YmtJIn0=&quot;,&#xd;
              &quot;2&quot;: &quot;vms_get_dealers&quot;,&#xd;
              &quot;3&quot;: &quot;2&quot;,&#xd;
              &quot;4&quot;: &quot;&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      &quot;PWERROR&quot;: {},&#xd;
      &quot;PWHEADER&quot;: {&#xd;
        &quot;LOGIN_ID&quot;: &quot;${p_Functionalloginid}&quot;,&#xd;
        &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
        &quot;IN_PROCESS_ID&quot;: &quot;11&quot;,&#xd;
        &quot;OUT_PROCESS_ID&quot;: &quot;APICALL&quot;&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/vms/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1867169789">success</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Question List-19" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
            &quot;PWDATA&quot;: {&#xd;
                &quot;APICALL&quot;: {&#xd;
                    &quot;Row&quot;: [&#xd;
                        {&#xd;
                            &quot;0&quot;: &quot;ZGVhbGVyL3F1ZXN0aW9ucz9kZWFsZXJfY29kZT0xNDkyNSZ5ZWFyPTIwMjA=&quot;,&#xd;
                            &quot;1&quot;: &quot;eydhcGlLZXknOiAiaFo4Q0NSckY0SEJjTXNucU1TSXZDS2RCUkFEWUFEYXlDbHJTZFJMdWJrSSJ9&quot;,&#xd;
                            &quot;2&quot;: &quot;vms_api_prod&quot;,&#xd;
                            &quot;3&quot;: &quot;2&quot;,&#xd;
                            &quot;4&quot;: &quot;&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            &quot;PWERROR&quot;: {},&#xd;
            &quot;PWHEADER&quot;: {&#xd;
                &quot;LOGIN_ID&quot;: &quot;tarun.kumar.ext@heromotocorp.com&quot;,&#xd;
                &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;IN_PROCESS_ID&quot;: &quot;11&quot;,&#xd;
                &quot;OUT_PROCESS_ID&quot;: &quot;APICALL&quot;&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/vms/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=" S05_VMS_T02_Question List" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
            &quot;PWDATA&quot;: {&#xd;
                &quot;APICALL&quot;: {&#xd;
                    &quot;Row&quot;: [&#xd;
                        {&#xd;
                            &quot;0&quot;: &quot;ZGVhbGVyL3F1ZXN0aW9ucz9kZWFsZXJfY29kZT0xMDQ3NiZ5ZWFyPTIwMjA=&quot;,&#xd;
                            &quot;1&quot;: &quot;eydhcGlLZXknOiAiaFo4Q0NSckY0SEJjTXNucU1TSXZDS2RCUkFEWUFEYXlDbHJTZFJMdWJrSSJ9&quot;,&#xd;
                            &quot;2&quot;: &quot;vms_api_prod&quot;,&#xd;
                            &quot;3&quot;: &quot;2&quot;,&#xd;
                            &quot;4&quot;: &quot;&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            &quot;PWERROR&quot;: {},&#xd;
            &quot;PWHEADER&quot;: {&#xd;
                &quot;LOGIN_ID&quot;: &quot;${p_Functionalloginid}&quot;,&#xd;
                &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;IN_PROCESS_ID&quot;: &quot;11&quot;,&#xd;
                &quot;OUT_PROCESS_ID&quot;: &quot;APICALL&quot;&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/vms/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1867169789">success</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Submit Questions-20" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
            &quot;PWDATA&quot;: {&#xd;
                &quot;APICALL&quot;: {&#xd;
                    &quot;Row&quot;: [&#xd;
                        {&#xd;
                            &quot;0&quot;: &quot;eyJkZWFsZXJfY29kZSI6ICIxNDkyNSIsInllYXIiOiAiMjAyMCJ9&quot;,&#xd;
                            &quot;1&quot;: &quot;eydhcGlLZXknOiAiaFo4Q0NSckY0SEJjTXNucU1TSXZDS2RCUkFEWUFEYXlDbHJTZFJMdWJrSSJ9&quot;,&#xd;
                            &quot;2&quot;: &quot;vms_submit_ques&quot;,&#xd;
                            &quot;3&quot;: &quot;1&quot;,&#xd;
                            &quot;4&quot;: &quot;&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            &quot;PWERROR&quot;: {},&#xd;
            &quot;PWHEADER&quot;: {&#xd;
                &quot;LOGIN_ID&quot;: &quot;tarun.kumar.ext@heromotocorp.com&quot;,&#xd;
                &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;IN_PROCESS_ID&quot;: &quot;11&quot;,&#xd;
                &quot;OUT_PROCESS_ID&quot;: &quot;APICALL&quot;&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/vms/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=" S05_VMS_T03_Submit Questions" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
            &quot;PWDATA&quot;: {&#xd;
                &quot;APICALL&quot;: {&#xd;
                    &quot;Row&quot;: [&#xd;
                        {&#xd;
                            &quot;0&quot;: &quot;eyJkZWFsZXJfY29kZSI6ICIxMDg0MCIsInllYXIiOiAiMjAyMCJ9&quot;,&#xd;
                            &quot;1&quot;: &quot;eydhcGlLZXknOiAiaFo4Q0NSckY0SEJjTXNucU1TSXZDS2RCUkFEWUFEYXlDbHJTZFJMdWJrSSJ9&quot;,&#xd;
                            &quot;2&quot;: &quot;vms_submit_ques&quot;,&#xd;
                            &quot;3&quot;: &quot;1&quot;,&#xd;
                            &quot;4&quot;: &quot;&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            &quot;PWERROR&quot;: {},&#xd;
            &quot;PWHEADER&quot;: {&#xd;
                &quot;LOGIN_ID&quot;: &quot;${p_Functionalloginid}&quot;,&#xd;
                &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;IN_PROCESS_ID&quot;: &quot;11&quot;,&#xd;
                &quot;OUT_PROCESS_ID&quot;: &quot;APICALL&quot;&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/vms/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1867169789">success</stringProp>
              <stringProp name="2137914952">There is no question to submit</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">34</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">10000</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=" S05_VMS_T04_Submit Image" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
            &quot;PWDATA&quot;: {&#xd;
                &quot;APICALL&quot;: {&#xd;
                    &quot;Row&quot;: [&#xd;
                        {&#xd;
                            &quot;0&quot;: &quot;&quot;,&#xd;
                            &quot;1&quot;: &quot;eydhcGlLZXknOiAiaFo4Q0NSckY0SEJjTXNucU1TSXZDS2RCUkFEWUFEYXlDbHJTZFJMdWJrSSIsIkNvbnRlbnQtVHlwZSI6ICJpbWFnZS9wbmcifQ==&quot;,&#xd;
                            &quot;2&quot;: &quot;vms_submit_image&quot;,&#xd;
                            &quot;3&quot;: &quot;1&quot;,&#xd;
                            &quot;4&quot;: &quot;&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            &quot;PWERROR&quot;: {},&#xd;
            &quot;PWHEADER&quot;: {&#xd;
                &quot;LOGIN_ID&quot;: &quot;${p_Functionalloginid}&quot;,&#xd;
                &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;IN_PROCESS_ID&quot;: &quot;11&quot;,&#xd;
                &quot;OUT_PROCESS_ID&quot;: &quot;APICALL&quot;&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/vms/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${p_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="157340911">Questions Image saved</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S06_CMS " enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">600</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${Rampup}</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${Duration}</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_CMS_T01_Bulletins" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="api_key" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">api_key</stringProp>
                <stringProp name="Argument.value">7149b33d01c04f36f00513e415c80ac6</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="_format" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_format</stringProp>
                <stringProp name="Argument.value">json</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/cms/bulletins</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">e0b894c3-a574-4cbc-8d8f-628a3c206d14</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1811893345">Sports</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_CMS_T02_communities" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="api_key" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">api_key</stringProp>
                <stringProp name="Argument.value">7149b33d01c04f36f00513e415c80ac6</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="_format" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_format</stringProp>
                <stringProp name="Argument.value">json</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/cms/communities</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">ce2a512f-347a-43bc-9154-6b39c0e263e3</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-567455692">Bikers Club</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_CMS_T03_notifications" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="api_key" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">api_key</stringProp>
                <stringProp name="Argument.value">7149b33d01c04f36f00513e415c80ac6</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="_format" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_format</stringProp>
                <stringProp name="Argument.value">json</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/cms/notifications</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">c4dca26d-3100-49ac-86d4-a609ed448613</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1155726926">Eye Care Camps</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S06_CMS_T04_search" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="key" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">key</stringProp>
                <stringProp name="Argument.value">hero</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="api_key" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">api_key</stringProp>
                <stringProp name="Argument.value">7149b33d01c04f36f00513e415c80ac6</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="_format" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_format</stringProp>
                <stringProp name="Argument.value">json</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/cms/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">f7d97d65-f038-4039-b794-3870462171f4</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1261802827">Hero policy test 1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S07_SpotLight" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${Rampup}</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${Duration}</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Sportliht_loginid" enabled="true">
          <stringProp name="filename">C:/Hero_Hub_Mobile(Previous)/TestData/Jwtloginid.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">p_JWTlloginid</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S07_SpotLight_T01_JWT-Token" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;data&quot;:{&#xd;
      &quot;emailAddress&quot;:&quot;${p_JWTlloginid}&quot;&#xd;
   }&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">hmcl-herohub-demo.azurewebsites.net</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">hmcl-herohub-demo.azurewebsites.net</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="SSO-Authorization" elementType="Header">
                <stringProp name="Header.name">SSO-Authorization</stringProp>
                <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6ImFjM2UzZTU1ODExMWM3YzdhNzVjNWI2NTEzNGQyMmY2M2VlMDA2ZDAiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiIzOTgxNDg0NjM3NTMtNGhkY2U5YzhuamZ2ZTBtNWFydm1mMGY2dWE1am5qbGUuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJhdWQiOiIzOTgxNDg0NjM3NTMtNGhkY2U5YzhuamZ2ZTBtNWFydm1mMGY2dWE1am5qbGUuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJzdWIiOiIxMDI2NjQ4NzI5MTYzMDc5MjE2MjAiLCJoZCI6Imhlcm9tb3RvY29ycC5jb20iLCJlbWFpbCI6ImNoYWl0cmEubWFsYXB1ci5leHRAaGVyb21vdG9jb3JwLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJub25jZSI6Im51bGwiLCJuYmYiOjE3MTQ2Mjk4NjMsIm5hbWUiOiJDaGFpdHJhIE1hbGFwdXIiLCJwaWN0dXJlIjoiaHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEo3VS1iWUFfNVhuREdIWmM3cDFLdnVEUDBOdnJSX2l5WWE0Qmo2eUI5MTlqbkh3PXM5Ni1jIiwiZ2l2ZW5fbmFtZSI6IkNoYWl0cmEiLCJmYW1pbHlfbmFtZSI6Ik1hbGFwdXIiLCJpYXQiOjE3MTQ2MzAxNjMsImV4cCI6MTcxNDYzMzc2MywianRpIjoiNDBhMTllMTJmMTMxY2RkMjY1MGQ0OWQ2ZjI5Yzk2NmQxNDEyMjI5MCJ9.FE0Wf4S_hcj3-mglbPC-C0CyAJNf7eFsqAB7d-K-ccOe2dRCuGjHMxhD4zsPTt-v9hufWW01wYO0VsHfETi_o5GLo9dzrVcPMBfPKfS4pR7i5rAhD17hjYCFOnJ9OUtKTR1_5RgmkTUMZ0Z-gHk31NEvwfjexfBqn_3GH8PQbIWb3GFNw5O4q0pTqhKF3rc4Xj8UcR-BIjKgEiEOQVGLBwEjObdLHvNem3h9zjhSzPg_o1-I-5TkLFI94zuLNcKFBq-3mylKGjOUlIeALk7YF9PoXnMvSMaYwUxPHdZgzPRKSHcLPyzxNVXuCVzkZQ9VD10wjcMGi6krruNj63BB0A</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">3996210a-29ce-449f-b150-346b683758ea</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_jwtToken" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">c_jwtToken</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;jwtToken&quot;: &quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
            <stringProp name="RegexExtractor.default"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S07_SpotLight_T02_SpotLight_HMCL_workAnniversary" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spotlights_hmcl-91" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/herohub/workAnniversary?_format=json&amp;api_key=7149b33d01c04f36f00513e415c80ac6</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type,sso-authorization</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type,sso-authorization</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spotlights_hmcl-92" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;data&quot;:{&quot;currentDate&quot;:&quot;${__timeShift(yyyy-MM-dd,,,,)}&quot;,&quot;functionCode&quot;:&quot;HMCL&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/herohub/workAnniversary</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">uat-apim.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;123&quot;, &quot;Not:A-Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;123&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="SSO-Authorization" elementType="Header">
                  <stringProp name="Header.name">SSO-Authorization</stringProp>
                  <stringProp name="Header.value">${c_SSOToken}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Host" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">uat-apim.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;123&quot;, &quot;Not:A-Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;123&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="JWT-Authorization" elementType="Header">
                  <stringProp name="Header.name">JWT-Authorization</stringProp>
                  <stringProp name="Header.value">${c_jwtToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S07_SpotLight_T03_SpotLight_HMCL_NewHeroes" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spotlights_hmcl-96" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/herohub/newHeroes</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type,sso-authorization</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spotlights_hmcl-97" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;data&quot;:{&quot;currentDate&quot;:&quot;${__timeShift(yyyy-MM-dd,,,,)}&quot;,&quot;functionCode&quot;:&quot;HMCL&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/herohub/newHeroes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="SSO-Authorization" elementType="Header">
                  <stringProp name="Header.name">SSO-Authorization</stringProp>
                  <stringProp name="Header.value">${c_SSOToken}</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;123&quot;, &quot;Not:A-Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;123&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;123&quot;, &quot;Not:A-Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;123&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="JWT-Authorization" elementType="Header">
                  <stringProp name="Header.name">JWT-Authorization</stringProp>
                  <stringProp name="Header.value">${c_jwtToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="JWT-Authorization" elementType="Header">
                  <stringProp name="Header.name">JWT-Authorization</stringProp>
                  <stringProp name="Header.value">${c_jwtToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S07_SpotLight_T04_SpotLight__HMCL_weddingAnniversary" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spotlights_hmcl-104" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/herohub/weddingAnniversary</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type,sso-authorization</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spotlights_hmcl-105" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;data&quot;:{&quot;currentDate&quot;:&quot;${__timeShift(yyyy-MM-dd,,,,)}&quot;,&quot;functionCode&quot;:&quot;HMCL&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/herohub/weddingAnniversary</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="SSO-Authorization" elementType="Header">
                  <stringProp name="Header.name">SSO-Authorization</stringProp>
                  <stringProp name="Header.value">${c_SSOToken}</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;123&quot;, &quot;Not:A-Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;123&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;123&quot;, &quot;Not:A-Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;123&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="JWT-Authorization" elementType="Header">
                  <stringProp name="Header.name">JWT-Authorization</stringProp>
                  <stringProp name="Header.value">${c_jwtToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="JWT-Authorization" elementType="Header">
                  <stringProp name="Header.name">JWT-Authorization</stringProp>
                  <stringProp name="Header.value">${c_jwtToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spotlights_hmcl-105" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;data&quot;:{&quot;currentDate&quot;:&quot;${__timeShift(yyyy-MM-dd,,,,)}&quot;,&quot;functionCode&quot;:&quot;HMCL&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/herohub/weddingAnniversary</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="SSO-Authorization" elementType="Header">
                  <stringProp name="Header.name">SSO-Authorization</stringProp>
                  <stringProp name="Header.value">${c_SSOToken}</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;123&quot;, &quot;Not:A-Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;123&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-apim.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-apim.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;123&quot;, &quot;Not:A-Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;123&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="JWT-Authorization" elementType="Header">
                  <stringProp name="Header.name">JWT-Authorization</stringProp>
                  <stringProp name="Header.value">${c_jwtToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="JWT-Authorization" elementType="Header">
                  <stringProp name="Header.name">JWT-Authorization</stringProp>
                  <stringProp name="Header.value">${c_jwtToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S07_SpotLight_T05_SpotLight_HMCL_MyFun_workAnniversary" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spotlights_my function-113" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;data&quot;:{&quot;currentDate&quot;:&quot;${__timeShift(yyyy-MM-dd,,,,)}&quot;,&quot;functionCode&quot;:&quot;50044380&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/herohub/workAnniversary</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="SSO-Authorization" elementType="Header">
                  <stringProp name="Header.name">SSO-Authorization</stringProp>
                  <stringProp name="Header.value">${c_SSOToken}</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;123&quot;, &quot;Not:A-Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;123&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;123&quot;, &quot;Not:A-Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;123&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="JWT-Authorization" elementType="Header">
                  <stringProp name="Header.name">JWT-Authorization</stringProp>
                  <stringProp name="Header.value">${c_jwtToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="JWT-Authorization" elementType="Header">
                  <stringProp name="Header.name">JWT-Authorization</stringProp>
                  <stringProp name="Header.value">${c_jwtToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spotlights_my function-114" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">uat-hub.heromotocorp.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/assets/assets/svg_images/spotlight_work_empty.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com/dashboard</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;123&quot;, &quot;Not:A-Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;123&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="JWT-Authorization" elementType="Header">
                  <stringProp name="Header.name">JWT-Authorization</stringProp>
                  <stringProp name="Header.value">${c_jwtToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S07_SpotLight_T06_SpotLight_HMCL_MyFun_NewHeroes" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spotlights_my function-112" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;data&quot;:{&quot;currentDate&quot;:&quot;${__timeShift(yyyy-MM-dd,,,,)}&quot;,&quot;functionCode&quot;:&quot;50044380&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/herohub/newHeroes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">50044380</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="SSO-Authorization" elementType="Header">
                  <stringProp name="Header.name">SSO-Authorization</stringProp>
                  <stringProp name="Header.value">${c_SSOToken}</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;123&quot;, &quot;Not:A-Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;123&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;123&quot;, &quot;Not:A-Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;123&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="JWT-Authorization" elementType="Header">
                  <stringProp name="Header.name">JWT-Authorization</stringProp>
                  <stringProp name="Header.value">${c_jwtToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="JWT-Authorization" elementType="Header">
                  <stringProp name="Header.name">JWT-Authorization</stringProp>
                  <stringProp name="Header.value">${c_jwtToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S07_SpotLight_T07_SpotLight_HMCL_MyFun_WeddingAnniversary" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spotlights_my function-111" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;data&quot;:{&quot;currentDate&quot;:&quot;${__timeShift(yyyy-MM-dd,,,,)}&quot;,&quot;functionCode&quot;:&quot;50044380&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/herohub/weddingAnniversary</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="SSO-Authorization" elementType="Header">
                  <stringProp name="Header.name">SSO-Authorization</stringProp>
                  <stringProp name="Header.value">${c_SSOToken}</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;123&quot;, &quot;Not:A-Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;123&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;123&quot;, &quot;Not:A-Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;123&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="JWT-Authorization" elementType="Header">
                  <stringProp name="Header.name">JWT-Authorization</stringProp>
                  <stringProp name="Header.value">${c_jwtToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="JWT-Authorization" elementType="Header">
                  <stringProp name="Header.name">JWT-Authorization</stringProp>
                  <stringProp name="Header.value">${c_jwtToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S07_SpotLight_T08_SpotLight_HMCL_MyFun_Birthday" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spotlights_my function-115" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;data&quot;:{&quot;currentDate&quot;:&quot;${__timeShift(yyyy-MM-dd,,,,)}&quot;,&quot;functionCode&quot;:&quot;50044380&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/herohub/birthday</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="SSO-Authorization" elementType="Header">
                  <stringProp name="Header.name">SSO-Authorization</stringProp>
                  <stringProp name="Header.value">${c_SSOToken}</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;123&quot;, &quot;Not:A-Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;123&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://uat-hub.heromotocorp.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;123&quot;, &quot;Not:A-Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;123&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="JWT-Authorization" elementType="Header">
                  <stringProp name="Header.name">JWT-Authorization</stringProp>
                  <stringProp name="Header.value">${c_jwtToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="JWT-Authorization" elementType="Header">
                  <stringProp name="Header.name">JWT-Authorization</stringProp>
                  <stringProp name="Header.value">${c_jwtToken}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S08_Dashboard_Story" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">600</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${Rampup}</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${Duration}</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Dashboardloginid" enabled="true">
          <stringProp name="filename">C:/Hero_Hub_Mobile(Previous)/TestData/Dashboardloginid.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">p_Dashboardloginid</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Employee_Id" enabled="true">
          <stringProp name="filename">C:/Hero_Hub_MobileApp/TestData/EmployeeId.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">p_employeeId</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S08_Dashboard_Story_T01_JWT-Token" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;data&quot;:{&#xd;
      &quot;emailAddress&quot;:&quot;${p_Dashboardloginid}&quot;&#xd;
   }&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">hmcl-herohub-demo.azurewebsites.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">hmcl-herohub-demo.azurewebsites.net</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="SSO-Authorization" elementType="Header">
                <stringProp name="Header.name">SSO-Authorization</stringProp>
                <stringProp name="Header.value">eyJhbGciOiJSUzI1NiIsImtpZCI6ImFjM2UzZTU1ODExMWM3YzdhNzVjNWI2NTEzNGQyMmY2M2VlMDA2ZDAiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiIzOTgxNDg0NjM3NTMtNGhkY2U5YzhuamZ2ZTBtNWFydm1mMGY2dWE1am5qbGUuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJhdWQiOiIzOTgxNDg0NjM3NTMtNGhkY2U5YzhuamZ2ZTBtNWFydm1mMGY2dWE1am5qbGUuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJzdWIiOiIxMDI2NjQ4NzI5MTYzMDc5MjE2MjAiLCJoZCI6Imhlcm9tb3RvY29ycC5jb20iLCJlbWFpbCI6ImNoYWl0cmEubWFsYXB1ci5leHRAaGVyb21vdG9jb3JwLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJub25jZSI6Im51bGwiLCJuYmYiOjE3MTQ2Mjk4NjMsIm5hbWUiOiJDaGFpdHJhIE1hbGFwdXIiLCJwaWN0dXJlIjoiaHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEo3VS1iWUFfNVhuREdIWmM3cDFLdnVEUDBOdnJSX2l5WWE0Qmo2eUI5MTlqbkh3PXM5Ni1jIiwiZ2l2ZW5fbmFtZSI6IkNoYWl0cmEiLCJmYW1pbHlfbmFtZSI6Ik1hbGFwdXIiLCJpYXQiOjE3MTQ2MzAxNjMsImV4cCI6MTcxNDYzMzc2MywianRpIjoiNDBhMTllMTJmMTMxY2RkMjY1MGQ0OWQ2ZjI5Yzk2NmQxNDEyMjI5MCJ9.FE0Wf4S_hcj3-mglbPC-C0CyAJNf7eFsqAB7d-K-ccOe2dRCuGjHMxhD4zsPTt-v9hufWW01wYO0VsHfETi_o5GLo9dzrVcPMBfPKfS4pR7i5rAhD17hjYCFOnJ9OUtKTR1_5RgmkTUMZ0Z-gHk31NEvwfjexfBqn_3GH8PQbIWb3GFNw5O4q0pTqhKF3rc4Xj8UcR-BIjKgEiEOQVGLBwEjObdLHvNem3h9zjhSzPg_o1-I-5TkLFI94zuLNcKFBq-3mylKGjOUlIeALk7YF9PoXnMvSMaYwUxPHdZgzPRKSHcLPyzxNVXuCVzkZQ9VD10wjcMGi6krruNj63BB0A</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">3996210a-29ce-449f-b150-346b683758ea</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_jwtToken1" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">c_jwtToken1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;jwtToken&quot;: &quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
            <stringProp name="RegexExtractor.default"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S08_Dashboard Story_T02_getStoryHistory" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;employeeId&quot;: &quot;${p_employeeId}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/herohub/getStoryHistory</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="jwt-authorization" elementType="Header">
                <stringProp name="Header.name">jwt-authorization</stringProp>
                <stringProp name="Header.value">${c_jwtToken1}</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">614942a0-38ab-4ac1-8244-2661f7b866d5</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_name" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">c_name</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;name&quot;: &quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">c_name_NF</stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2028250012">Data Fetched Successfully</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${ThinkTime}</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S08_Dashboard Story_T03_updateStoryHistory" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;: {&#xd;
        &quot;employeeId&quot;: &quot;${p_employeeId}&quot;,&#xd;
        &quot;topic&quot;: &quot;${c_name}&quot;,&#xd;
        &quot;stories&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;1&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;id&quot;: &quot;5&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;id&quot;: &quot;7&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/herohub/updateStoryHistory</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="jwt-authorization" elementType="Header">
                <stringProp name="Header.name">jwt-authorization</stringProp>
                <stringProp name="Header.value">${c_jwtToken1}</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">aad04ab9-2aa6-41fb-bc80-443684f674b3</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2028250012">Data Fetched Successfully</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S09_Attendance" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list">
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https://uat-apim.heromotocorp.com/rfc/</stringProp>
              <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
              <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
              <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
            </elementProp>
          </collectionProp>
          <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
        </AuthManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get biometric punch in-7" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
            &quot;PWDATA&quot;: {&#xd;
                &quot;RFCCALL&quot;: {&#xd;
                    &quot;app_name&quot;: &quot;ExchangeApp&quot;,&#xd;
                    &quot;export_table_data&quot;: {},&#xd;
                    &quot;import_table_name&quot;: &quot;[&apos;IT_ATT_DATA&apos;, &apos;IT_LEAVE_STATUS&apos;]&quot;,&#xd;
                    &quot;params&quot;: {&#xd;
                        &quot;PERNR&quot;: &quot;9728&quot;,&#xd;
                        &quot;DATE_FROM&quot;: &quot;10-10-2024&quot;,&#xd;
                        &quot;DATE_TO&quot;: &quot;10-10-2024&quot;&#xd;
                    },&#xd;
                    &quot;rfc_name&quot;: &quot;ZHR_EMP_ATTENDANCE_UPDATE_N&quot;,&#xd;
                    &quot;server&quot;: &quot;quality_ECC&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;PWERROR&quot;: {},&#xd;
            &quot;PWHEADER&quot;: {&#xd;
                &quot;LOGIN_ID&quot;: &quot;sudarsanan.k.ext@heromotocorp.com&quot;,&#xd;
                &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;IN_PROCESS_ID&quot;: &quot;3&quot;,&#xd;
                &quot;OUT_PROCESS_ID&quot;: &quot;RFCCALL&quot;&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/rfc/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="jwt-authorization" elementType="Header">
                <stringProp name="Header.name">jwt-authorization</stringProp>
                <stringProp name="Header.value">eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJIZXJvSHViIiwic3ViIjoiSldUVG9rZW4iLCJlbWFpbEFkZHJlc3MiOiJJMkc1N2xCNDA3d2Vhc0NtTUlUdVYvMHBkUTJ6eHVlY2o5cDlLSkZzcUJnPSIsImVtcGxveWVlSWQiOiJLYVZ5U09SdElNUHhkL3J1c2dENFRnPT0iLCJleHAiOjE3Mjk2OTYyNjh9.Oz84uB6OEu6CAT7Evx8eBVwmy8tbaJ9GX2POaay7rc4</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">43051589-3680-4c7e-bd27-3adf4c9e52b8</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6STFOaUo5LmV5SnNiMk1pT2lKYVR5QkNZVzVuWVd4dmNtVWlMQ0poY0hCV1pYSnphVzl1SWpvaU1USXVOeUlzSW1kbGJtUmxjaUk2SWsxaGJHVWlMQ0poY0hCZmRtVnljMmx2YmlJNklqRXVNQ0lzSW5CaGRHZ2lPaUpvZEhSd2N6b3ZMMjF2WW1sc1pXRndjSE11YUdWeWIyMXZkRzlqYjNKd0xtTnZiUzlrZDJGd2NEOWhjSEE5UlUxUVRFOVpSVVVpTENKMWFXUWlPaUp0YjJKcGJHVmhjSEExTG5KbWJVQm9aWEp2Ylc5MGIyTnZjbkF1WTI5dElpd2lablZ1WTNScGIyNGlPaUpUUVV4RlV5QkJUa1FnUVVaVVJWSWdVMEZNUlZNaUxDSnpZMjl3WlNJNkltRnNiQ0lzSW5SdmEyVnVYM1JwYldVaU9pSXlNREkwTFRFd0xURTJJREl3T2pReU9qSTJJaXdpWjI5dloyeGxRWEJwUzJWNUlqb2lRVWw2WVZONVEyMHRZa0pXUzFsVE1tZHBWMDlXVEhwTlRVUjNVVnBEUjB0ck0zcExTWE13SWl3aWJHRnpkRjlzYjJkcGJpSTZJakl3TWpRdE1UQXRNVFlnTWpBNk5ERTZNRGdpTENKdGIySmZibThpT2lJaUxDSm1iM0pqWlZWd1pHRjBaU0k2SWs0aUxDSnRaWE56WVdkbElqb2lJaXdpZEc5clpXNGlPaUl3WkdKaU0yTTNNQzA0WW1ReExURXhaV1l0T1dVeFl5MWlZVGcwWm1JNFpqSXdNekVpTENJd0lqb2lJaXdpYzNWaVgyeHZZMkYwYVc5dUlqb2lXazhnUW1GdVoyRnNiM0psSWl3aVlYQndYMjVoYldVaU9pSklSVkFpTENKemRXTmpaWE56SWpvaU1TSXNJbWR5WVdSbElqb2lSVFVpTENKaFkyTmxjM05mYTJWNUlqb2lNR1JpWWpOak56QXRPR0prTVMweE1XVm1MVGxsTVdNdFltRTROR1ppT0dZeU1ETXhJaXdpYm1GdFpTSTZJbEIxYm1WbGRDSXNJbXh2WTJGMGFXOXVJam9pVTI5MWRHZ2dXbTl1WlNJc0ltUmxjMmxuYm1GMGFXOXVJam9pVkVWU1VrbFVUMUpaSUUxQlRrRkhSVklnTFNCVFJWSldTVU5GSWl3aWNISnZiWEIwSWpvaUlpd2laV05mYm04aU9pSXhOelV5TkNJc0ltVjRjQ0k2TVRjeU9UazFOVFUwTm4wLmhycVBCeFpBM0RveU1nWDUxU09DV2d2RlgtWTV3QkxDUkRPRkNQNW1XVGs</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetTotalBalanceHour-8" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
            &quot;PWDATA&quot;: {&#xd;
                &quot;RFCCALL&quot;: {&#xd;
                    &quot;app_name&quot;: &quot;ExchangeApp&quot;,&#xd;
                    &quot;export_table_data&quot;: {},&#xd;
                    &quot;import_table_name&quot;: &quot;[]&quot;,&#xd;
                    &quot;params&quot;: {&#xd;
                        &quot;EMPLOYEE_ID&quot;: &quot;9728&quot;&#xd;
                    },&#xd;
                    &quot;rfc_name&quot;: &quot;ZLMS_ATTENDANCE_RECORD_HOURS&quot;,&#xd;
                    &quot;server&quot;: &quot;quality_ECC&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;PWERROR&quot;: {},&#xd;
            &quot;PWHEADER&quot;: {&#xd;
                &quot;LOGIN_ID&quot;: &quot;sudarsanan.k.ext@heromotocorp.com&quot;,&#xd;
                &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;IN_PROCESS_ID&quot;: &quot;3&quot;,&#xd;
                &quot;OUT_PROCESS_ID&quot;: &quot;RFCCALL&quot;&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/rfc/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="jwt-authorization" elementType="Header">
                <stringProp name="Header.name">jwt-authorization</stringProp>
                <stringProp name="Header.value">eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJIZXJvSHViIiwic3ViIjoiSldUVG9rZW4iLCJlbWFpbEFkZHJlc3MiOiJJMkc1N2xCNDA3d2Vhc0NtTUlUdVYvMHBkUTJ6eHVlY2o5cDlLSkZzcUJnPSIsImVtcGxveWVlSWQiOiJLYVZ5U09SdElNUHhkL3J1c2dENFRnPT0iLCJleHAiOjE3Mjk2OTYyNjh9.Oz84uB6OEu6CAT7Evx8eBVwmy8tbaJ9GX2POaay7rc4</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">4aadfacb-e95c-4bd9-96d0-0d85f4fff2b0</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6STFOaUo5LmV5SnNiMk1pT2lKYVR5QkNZVzVuWVd4dmNtVWlMQ0poY0hCV1pYSnphVzl1SWpvaU1USXVOeUlzSW1kbGJtUmxjaUk2SWsxaGJHVWlMQ0poY0hCZmRtVnljMmx2YmlJNklqRXVNQ0lzSW5CaGRHZ2lPaUpvZEhSd2N6b3ZMMjF2WW1sc1pXRndjSE11YUdWeWIyMXZkRzlqYjNKd0xtTnZiUzlrZDJGd2NEOWhjSEE5UlUxUVRFOVpSVVVpTENKMWFXUWlPaUp0YjJKcGJHVmhjSEExTG5KbWJVQm9aWEp2Ylc5MGIyTnZjbkF1WTI5dElpd2lablZ1WTNScGIyNGlPaUpUUVV4RlV5QkJUa1FnUVVaVVJWSWdVMEZNUlZNaUxDSnpZMjl3WlNJNkltRnNiQ0lzSW5SdmEyVnVYM1JwYldVaU9pSXlNREkwTFRFd0xURTJJREl3T2pReU9qSTJJaXdpWjI5dloyeGxRWEJwUzJWNUlqb2lRVWw2WVZONVEyMHRZa0pXUzFsVE1tZHBWMDlXVEhwTlRVUjNVVnBEUjB0ck0zcExTWE13SWl3aWJHRnpkRjlzYjJkcGJpSTZJakl3TWpRdE1UQXRNVFlnTWpBNk5ERTZNRGdpTENKdGIySmZibThpT2lJaUxDSm1iM0pqWlZWd1pHRjBaU0k2SWs0aUxDSnRaWE56WVdkbElqb2lJaXdpZEc5clpXNGlPaUl3WkdKaU0yTTNNQzA0WW1ReExURXhaV1l0T1dVeFl5MWlZVGcwWm1JNFpqSXdNekVpTENJd0lqb2lJaXdpYzNWaVgyeHZZMkYwYVc5dUlqb2lXazhnUW1GdVoyRnNiM0psSWl3aVlYQndYMjVoYldVaU9pSklSVkFpTENKemRXTmpaWE56SWpvaU1TSXNJbWR5WVdSbElqb2lSVFVpTENKaFkyTmxjM05mYTJWNUlqb2lNR1JpWWpOak56QXRPR0prTVMweE1XVm1MVGxsTVdNdFltRTROR1ppT0dZeU1ETXhJaXdpYm1GdFpTSTZJbEIxYm1WbGRDSXNJbXh2WTJGMGFXOXVJam9pVTI5MWRHZ2dXbTl1WlNJc0ltUmxjMmxuYm1GMGFXOXVJam9pVkVWU1VrbFVUMUpaSUUxQlRrRkhSVklnTFNCVFJWSldTVU5GSWl3aWNISnZiWEIwSWpvaUlpd2laV05mYm04aU9pSXhOelV5TkNJc0ltVjRjQ0k2TVRjeU9UazFOVFUwTm4wLmhycVBCeFpBM0RveU1nWDUxU09DV2d2RlgtWTV3QkxDUkRPRkNQNW1XVGs</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Post attendance-9" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
            &quot;PWDATA&quot;: {&#xd;
                &quot;attendance_inpunch_new_v2&quot;: {&#xd;
                    &quot;Row&quot;: [&#xd;
                        {&#xd;
                            &quot;0&quot;: &quot;9728&quot;,&#xd;
                            &quot;1&quot;: &quot;BO Udaipur&quot;,&#xd;
                            &quot;2&quot;: &quot;0:0&quot;,&#xd;
                            &quot;3&quot;: &quot;&quot;,&#xd;
                            &quot;4&quot;: &quot;home&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            },&#xd;
            &quot;PWERROR&quot;: {},&#xd;
            &quot;PWHEADER&quot;: {&#xd;
                &quot;LOGIN_ID&quot;: &quot;sudarsanan.k.ext@heromotocorp.com&quot;,&#xd;
                &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;IN_PROCESS_ID&quot;: &quot;1&quot;,&#xd;
                &quot;OUT_PROCESS_ID&quot;: &quot;attendance_inpunch_new_v2&quot;&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/rfc/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6STFOaUo5LmV5SnNiMk1pT2lKYVR5QkNZVzVuWVd4dmNtVWlMQ0poY0hCV1pYSnphVzl1SWpvaU1USXVOeUlzSW1kbGJtUmxjaUk2SWsxaGJHVWlMQ0poY0hCZmRtVnljMmx2YmlJNklqRXVNQ0lzSW5CaGRHZ2lPaUpvZEhSd2N6b3ZMMjF2WW1sc1pXRndjSE11YUdWeWIyMXZkRzlqYjNKd0xtTnZiUzlrZDJGd2NEOWhjSEE5UlUxUVRFOVpSVVVpTENKMWFXUWlPaUp0YjJKcGJHVmhjSEExTG5KbWJVQm9aWEp2Ylc5MGIyTnZjbkF1WTI5dElpd2lablZ1WTNScGIyNGlPaUpUUVV4RlV5QkJUa1FnUVVaVVJWSWdVMEZNUlZNaUxDSnpZMjl3WlNJNkltRnNiQ0lzSW5SdmEyVnVYM1JwYldVaU9pSXlNREkwTFRFd0xURTJJREl3T2pReU9qSTJJaXdpWjI5dloyeGxRWEJwUzJWNUlqb2lRVWw2WVZONVEyMHRZa0pXUzFsVE1tZHBWMDlXVEhwTlRVUjNVVnBEUjB0ck0zcExTWE13SWl3aWJHRnpkRjlzYjJkcGJpSTZJakl3TWpRdE1UQXRNVFlnTWpBNk5ERTZNRGdpTENKdGIySmZibThpT2lJaUxDSm1iM0pqWlZWd1pHRjBaU0k2SWs0aUxDSnRaWE56WVdkbElqb2lJaXdpZEc5clpXNGlPaUl3WkdKaU0yTTNNQzA0WW1ReExURXhaV1l0T1dVeFl5MWlZVGcwWm1JNFpqSXdNekVpTENJd0lqb2lJaXdpYzNWaVgyeHZZMkYwYVc5dUlqb2lXazhnUW1GdVoyRnNiM0psSWl3aVlYQndYMjVoYldVaU9pSklSVkFpTENKemRXTmpaWE56SWpvaU1TSXNJbWR5WVdSbElqb2lSVFVpTENKaFkyTmxjM05mYTJWNUlqb2lNR1JpWWpOak56QXRPR0prTVMweE1XVm1MVGxsTVdNdFltRTROR1ppT0dZeU1ETXhJaXdpYm1GdFpTSTZJbEIxYm1WbGRDSXNJbXh2WTJGMGFXOXVJam9pVTI5MWRHZ2dXbTl1WlNJc0ltUmxjMmxuYm1GMGFXOXVJam9pVkVWU1VrbFVUMUpaSUUxQlRrRkhSVklnTFNCVFJWSldTVU5GSWl3aWNISnZiWEIwSWpvaUlpd2laV05mYm04aU9pSXhOelV5TkNJc0ltVjRjQ0k2TVRjeU9UazFOVFUwTm4wLmhycVBCeFpBM0RveU1nWDUxU09DV2d2RlgtWTV3QkxDUkRPRkNQNW1XVGs</stringProp>
              </elementProp>
              <elementProp name="jwt-authorization" elementType="Header">
                <stringProp name="Header.name">jwt-authorization</stringProp>
                <stringProp name="Header.value">eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJIZXJvSHViIiwic3ViIjoiSldUVG9rZW4iLCJlbWFpbEFkZHJlc3MiOiJJMkc1N2xCNDA3d2Vhc0NtTUlUdVYvMHBkUTJ6eHVlY2o5cDlLSkZzcUJnPSIsImVtcGxveWVlSWQiOiJLYVZ5U09SdElNUHhkL3J1c2dENFRnPT0iLCJleHAiOjE3Mjk2OTYyNjh9.Oz84uB6OEu6CAT7Evx8eBVwmy8tbaJ9GX2POaay7rc4</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">a9c2ec82-3804-4cba-b304-f2212bb4a8fb</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SetWFHMobility-10" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
          &quot;PWDATA&quot;: {&#xd;
            &quot;RFCCALL&quot;: {&#xd;
              &quot;app_name&quot;: &quot;EmployeeApp&quot;,&#xd;
              &quot;export_table_data&quot;: {},&#xd;
              &quot;import_table_name&quot;: &quot;[\&quot;\&quot;]&quot;,&#xd;
              &quot;params&quot;: {&#xd;
                &quot;PERNR&quot;: &quot;9728&quot;,&#xd;
                &quot;DATE&quot;: &quot;16-10-2024&quot;,&#xd;
                &quot;FLAG&quot;: &quot;W&quot;&#xd;
              },&#xd;
              &quot;rfc_name&quot;: &quot;ZHR_WFH_MOBILITY&quot;,&#xd;
              &quot;server&quot;: &quot;quality_ECC&quot;&#xd;
            }&#xd;
          },&#xd;
          &quot;PWERROR&quot;: {},&#xd;
          &quot;PWHEADER&quot;: {&#xd;
            &quot;LOGIN_ID&quot;: &quot;sudarsanan.k.ext@heromotocorp.com&quot;,&#xd;
            &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
            &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
            &quot;IN_PROCESS_ID&quot;: &quot;3&quot;,&#xd;
            &quot;OUT_PROCESS_ID&quot;: &quot;RFCCALL&quot;&#xd;
          }&#xd;
        }&#xd;
      }&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/rfc/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="jwt-authorization" elementType="Header">
                <stringProp name="Header.name">jwt-authorization</stringProp>
                <stringProp name="Header.value">eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJIZXJvSHViIiwic3ViIjoiSldUVG9rZW4iLCJlbWFpbEFkZHJlc3MiOiJJMkc1N2xCNDA3d2Vhc0NtTUlUdVYvMHBkUTJ6eHVlY2o5cDlLSkZzcUJnPSIsImVtcGxveWVlSWQiOiJLYVZ5U09SdElNUHhkL3J1c2dENFRnPT0iLCJleHAiOjE3Mjk2OTYyNjh9.Oz84uB6OEu6CAT7Evx8eBVwmy8tbaJ9GX2POaay7rc4</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">cb5738fc-101c-4ae3-95fd-f4634b7a8e25</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6STFOaUo5LmV5SnNiMk1pT2lKYVR5QkNZVzVuWVd4dmNtVWlMQ0poY0hCV1pYSnphVzl1SWpvaU1USXVOeUlzSW1kbGJtUmxjaUk2SWsxaGJHVWlMQ0poY0hCZmRtVnljMmx2YmlJNklqRXVNQ0lzSW5CaGRHZ2lPaUpvZEhSd2N6b3ZMMjF2WW1sc1pXRndjSE11YUdWeWIyMXZkRzlqYjNKd0xtTnZiUzlrZDJGd2NEOWhjSEE5UlUxUVRFOVpSVVVpTENKMWFXUWlPaUp0YjJKcGJHVmhjSEExTG5KbWJVQm9aWEp2Ylc5MGIyTnZjbkF1WTI5dElpd2lablZ1WTNScGIyNGlPaUpUUVV4RlV5QkJUa1FnUVVaVVJWSWdVMEZNUlZNaUxDSnpZMjl3WlNJNkltRnNiQ0lzSW5SdmEyVnVYM1JwYldVaU9pSXlNREkwTFRFd0xURTJJREl3T2pReU9qSTJJaXdpWjI5dloyeGxRWEJwUzJWNUlqb2lRVWw2WVZONVEyMHRZa0pXUzFsVE1tZHBWMDlXVEhwTlRVUjNVVnBEUjB0ck0zcExTWE13SWl3aWJHRnpkRjlzYjJkcGJpSTZJakl3TWpRdE1UQXRNVFlnTWpBNk5ERTZNRGdpTENKdGIySmZibThpT2lJaUxDSm1iM0pqWlZWd1pHRjBaU0k2SWs0aUxDSnRaWE56WVdkbElqb2lJaXdpZEc5clpXNGlPaUl3WkdKaU0yTTNNQzA0WW1ReExURXhaV1l0T1dVeFl5MWlZVGcwWm1JNFpqSXdNekVpTENJd0lqb2lJaXdpYzNWaVgyeHZZMkYwYVc5dUlqb2lXazhnUW1GdVoyRnNiM0psSWl3aVlYQndYMjVoYldVaU9pSklSVkFpTENKemRXTmpaWE56SWpvaU1TSXNJbWR5WVdSbElqb2lSVFVpTENKaFkyTmxjM05mYTJWNUlqb2lNR1JpWWpOak56QXRPR0prTVMweE1XVm1MVGxsTVdNdFltRTROR1ppT0dZeU1ETXhJaXdpYm1GdFpTSTZJbEIxYm1WbGRDSXNJbXh2WTJGMGFXOXVJam9pVTI5MWRHZ2dXbTl1WlNJc0ltUmxjMmxuYm1GMGFXOXVJam9pVkVWU1VrbFVUMUpaSUUxQlRrRkhSVklnTFNCVFJWSldTVU5GSWl3aWNISnZiWEIwSWpvaUlpd2laV05mYm04aU9pSXhOelV5TkNJc0ltVjRjQ0k2TVRjeU9UazFOVFUwTm4wLmhycVBCeFpBM0RveU1nWDUxU09DV2d2RlgtWTV3QkxDUkRPRkNQNW1XVGs</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S10_Attendance Details" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Submit API-11" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
            &quot;PWDATA&quot;: {&#xd;
                &quot;RFCCALL&quot;: {&#xd;
                    &quot;app_name&quot;: &quot;EmployeeApp&quot;,&#xd;
                    &quot;export_table_data&quot;: &quot;{\&quot;CT_CORRECTION_DATA\&quot;:[{\&quot;EMP_NO\&quot;:\&quot;9728\&quot;,\&quot;ATTEND_DATE\&quot;:\&quot;20241016\&quot;,\&quot;PERIOD_FLAG\&quot;:\&quot;SH\&quot;,\&quot;SHIFT\&quot;:\&quot;A\&quot;,\&quot;REASON\&quot;:\&quot;CRE\&quot;,\&quot;CRTD_ON\&quot;:\&quot;20241016\&quot;}]}&quot;,&#xd;
                    &quot;import_table_name&quot;: &quot;[\&quot;RETURN\&quot;]&quot;,&#xd;
                    &quot;params&quot;: {},&#xd;
                    &quot;rfc_name&quot;: &quot;ZLMS_ATT_CORREC_N&quot;,&#xd;
                    &quot;server&quot;: &quot;quality_ECC&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;PWERROR&quot;: {},&#xd;
            &quot;PWHEADER&quot;: {&#xd;
                &quot;LOGIN_ID&quot;: &quot;sudarsanan.k.ext@heromotocorp.com&quot;,&#xd;
                &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;IN_PROCESS_ID&quot;: &quot;3&quot;,&#xd;
                &quot;OUT_PROCESS_ID&quot;: &quot;RFCCALL&quot;&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/rfc/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="jwt-authorization" elementType="Header">
                <stringProp name="Header.name">jwt-authorization</stringProp>
                <stringProp name="Header.value">eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJIZXJvSHViIiwic3ViIjoiSldUVG9rZW4iLCJlbWFpbEFkZHJlc3MiOiJJMkc1N2xCNDA3d2Vhc0NtTUlUdVYvMHBkUTJ6eHVlY2o5cDlLSkZzcUJnPSIsImVtcGxveWVlSWQiOiJLYVZ5U09SdElNUHhkL3J1c2dENFRnPT0iLCJleHAiOjE3Mjk2OTYyNjh9.Oz84uB6OEu6CAT7Evx8eBVwmy8tbaJ9GX2POaay7rc4</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">123a8c9a-c811-4185-a653-0cab00ebd05a</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6STFOaUo5LmV5SnNiMk1pT2lKYVR5QkNZVzVuWVd4dmNtVWlMQ0poY0hCV1pYSnphVzl1SWpvaU1USXVOeUlzSW1kbGJtUmxjaUk2SWsxaGJHVWlMQ0poY0hCZmRtVnljMmx2YmlJNklqRXVNQ0lzSW5CaGRHZ2lPaUpvZEhSd2N6b3ZMMjF2WW1sc1pXRndjSE11YUdWeWIyMXZkRzlqYjNKd0xtTnZiUzlrZDJGd2NEOWhjSEE5UlUxUVRFOVpSVVVpTENKMWFXUWlPaUp0YjJKcGJHVmhjSEExTG5KbWJVQm9aWEp2Ylc5MGIyTnZjbkF1WTI5dElpd2lablZ1WTNScGIyNGlPaUpUUVV4RlV5QkJUa1FnUVVaVVJWSWdVMEZNUlZNaUxDSnpZMjl3WlNJNkltRnNiQ0lzSW5SdmEyVnVYM1JwYldVaU9pSXlNREkwTFRFd0xURTJJREl3T2pReU9qSTJJaXdpWjI5dloyeGxRWEJwUzJWNUlqb2lRVWw2WVZONVEyMHRZa0pXUzFsVE1tZHBWMDlXVEhwTlRVUjNVVnBEUjB0ck0zcExTWE13SWl3aWJHRnpkRjlzYjJkcGJpSTZJakl3TWpRdE1UQXRNVFlnTWpBNk5ERTZNRGdpTENKdGIySmZibThpT2lJaUxDSm1iM0pqWlZWd1pHRjBaU0k2SWs0aUxDSnRaWE56WVdkbElqb2lJaXdpZEc5clpXNGlPaUl3WkdKaU0yTTNNQzA0WW1ReExURXhaV1l0T1dVeFl5MWlZVGcwWm1JNFpqSXdNekVpTENJd0lqb2lJaXdpYzNWaVgyeHZZMkYwYVc5dUlqb2lXazhnUW1GdVoyRnNiM0psSWl3aVlYQndYMjVoYldVaU9pSklSVkFpTENKemRXTmpaWE56SWpvaU1TSXNJbWR5WVdSbElqb2lSVFVpTENKaFkyTmxjM05mYTJWNUlqb2lNR1JpWWpOak56QXRPR0prTVMweE1XVm1MVGxsTVdNdFltRTROR1ppT0dZeU1ETXhJaXdpYm1GdFpTSTZJbEIxYm1WbGRDSXNJbXh2WTJGMGFXOXVJam9pVTI5MWRHZ2dXbTl1WlNJc0ltUmxjMmxuYm1GMGFXOXVJam9pVkVWU1VrbFVUMUpaSUUxQlRrRkhSVklnTFNCVFJWSldTVU5GSWl3aWNISnZiWEIwSWpvaUlpd2laV05mYm04aU9pSXhOelV5TkNJc0ltVjRjQ0k2TVRjeU9UazFOVFUwTm4wLmhycVBCeFpBM0RveU1nWDUxU09DV2d2RlgtWTV3QkxDUkRPRkNQNW1XVGs</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get activity log details-12" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
            &quot;PWDATA&quot;: {&#xd;
                &quot;RFCCALL&quot;: {&#xd;
                    &quot;app_name&quot;: &quot;EmployeeApp&quot;,&#xd;
                    &quot;export_table_data&quot;: {},&#xd;
                    &quot;import_table_name&quot;: &quot;[\&quot;T_LMS_ATT_LIST\&quot;]&quot;,&#xd;
                    &quot;params&quot;: {&#xd;
                        &quot;IV_EMP_ID&quot;: &quot;9728&quot;&#xd;
                    },&#xd;
                    &quot;rfc_name&quot;: &quot;ZLMS_ATTENDANCE_LIST_N &quot;,&#xd;
                    &quot;server&quot;: &quot;quality_ECC&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;PWERROR&quot;: {},&#xd;
            &quot;PWHEADER&quot;: {&#xd;
                &quot;LOGIN_ID&quot;: &quot;sudarsanan.k.ext@heromotocorp.com&quot;,&#xd;
                &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;IN_PROCESS_ID&quot;: &quot;3&quot;,&#xd;
                &quot;OUT_PROCESS_ID&quot;: &quot;RFCCALL&quot;&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/rfc/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="jwt-authorization" elementType="Header">
                <stringProp name="Header.name">jwt-authorization</stringProp>
                <stringProp name="Header.value">eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJIZXJvSHViIiwic3ViIjoiSldUVG9rZW4iLCJlbWFpbEFkZHJlc3MiOiJJMkc1N2xCNDA3d2Vhc0NtTUlUdVYvMHBkUTJ6eHVlY2o5cDlLSkZzcUJnPSIsImVtcGxveWVlSWQiOiJLYVZ5U09SdElNUHhkL3J1c2dENFRnPT0iLCJleHAiOjE3Mjk2OTYyNjh9.Oz84uB6OEu6CAT7Evx8eBVwmy8tbaJ9GX2POaay7rc4</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">86cadef5-d5ed-4e9b-a3bc-615e7bf47c63</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6STFOaUo5LmV5SnNiMk1pT2lKYVR5QkNZVzVuWVd4dmNtVWlMQ0poY0hCV1pYSnphVzl1SWpvaU1USXVOeUlzSW1kbGJtUmxjaUk2SWsxaGJHVWlMQ0poY0hCZmRtVnljMmx2YmlJNklqRXVNQ0lzSW5CaGRHZ2lPaUpvZEhSd2N6b3ZMMjF2WW1sc1pXRndjSE11YUdWeWIyMXZkRzlqYjNKd0xtTnZiUzlrZDJGd2NEOWhjSEE5UlUxUVRFOVpSVVVpTENKMWFXUWlPaUp0YjJKcGJHVmhjSEExTG5KbWJVQm9aWEp2Ylc5MGIyTnZjbkF1WTI5dElpd2lablZ1WTNScGIyNGlPaUpUUVV4RlV5QkJUa1FnUVVaVVJWSWdVMEZNUlZNaUxDSnpZMjl3WlNJNkltRnNiQ0lzSW5SdmEyVnVYM1JwYldVaU9pSXlNREkwTFRFd0xURTJJREl3T2pReU9qSTJJaXdpWjI5dloyeGxRWEJwUzJWNUlqb2lRVWw2WVZONVEyMHRZa0pXUzFsVE1tZHBWMDlXVEhwTlRVUjNVVnBEUjB0ck0zcExTWE13SWl3aWJHRnpkRjlzYjJkcGJpSTZJakl3TWpRdE1UQXRNVFlnTWpBNk5ERTZNRGdpTENKdGIySmZibThpT2lJaUxDSm1iM0pqWlZWd1pHRjBaU0k2SWs0aUxDSnRaWE56WVdkbElqb2lJaXdpZEc5clpXNGlPaUl3WkdKaU0yTTNNQzA0WW1ReExURXhaV1l0T1dVeFl5MWlZVGcwWm1JNFpqSXdNekVpTENJd0lqb2lJaXdpYzNWaVgyeHZZMkYwYVc5dUlqb2lXazhnUW1GdVoyRnNiM0psSWl3aVlYQndYMjVoYldVaU9pSklSVkFpTENKemRXTmpaWE56SWpvaU1TSXNJbWR5WVdSbElqb2lSVFVpTENKaFkyTmxjM05mYTJWNUlqb2lNR1JpWWpOak56QXRPR0prTVMweE1XVm1MVGxsTVdNdFltRTROR1ppT0dZeU1ETXhJaXdpYm1GdFpTSTZJbEIxYm1WbGRDSXNJbXh2WTJGMGFXOXVJam9pVTI5MWRHZ2dXbTl1WlNJc0ltUmxjMmxuYm1GMGFXOXVJam9pVkVWU1VrbFVUMUpaSUUxQlRrRkhSVklnTFNCVFJWSldTVU5GSWl3aWNISnZiWEIwSWpvaUlpd2laV05mYm04aU9pSXhOelV5TkNJc0ltVjRjQ0k2TVRjeU9UazFOVFUwTm4wLmhycVBCeFpBM0RveU1nWDUxU09DV2d2RlgtWTV3QkxDUkRPRkNQNW1XVGs</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete activity log-13" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
            &quot;PWDATA&quot;: {&#xd;
                &quot;RFCCALL&quot;: {&#xd;
                    &quot;app_name&quot;: &quot;EmployeeApp&quot;,&#xd;
                    &quot;export_table_data&quot;: {},&#xd;
                    &quot;import_table_name&quot;: &quot;[\&quot;RETURN\&quot;]&quot;,&#xd;
                    &quot;params&quot;: {&#xd;
                        &quot;DOC_NO&quot;: &quot;9412341&quot;,&#xd;
                        &quot;REASON&quot;: &quot;testing&quot;&#xd;
                    },&#xd;
                    &quot;rfc_name&quot;: &quot;ZLMS_ATTD_MODIFY_N1&quot;,&#xd;
                    &quot;server&quot;: &quot;quality_ECC&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;PWERROR&quot;: {},&#xd;
            &quot;PWHEADER&quot;: {&#xd;
                &quot;LOGIN_ID&quot;: &quot;sudarsanan.k.ext@heromotocorp.com&quot;,&#xd;
                &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;IN_PROCESS_ID&quot;: &quot;3&quot;,&#xd;
                &quot;OUT_PROCESS_ID&quot;: &quot;RFCCALL&quot;&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/rfc/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="jwt-authorization" elementType="Header">
                <stringProp name="Header.name">jwt-authorization</stringProp>
                <stringProp name="Header.value">eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJIZXJvSHViIiwic3ViIjoiSldUVG9rZW4iLCJlbWFpbEFkZHJlc3MiOiJJMkc1N2xCNDA3d2Vhc0NtTUlUdVYvMHBkUTJ6eHVlY2o5cDlLSkZzcUJnPSIsImVtcGxveWVlSWQiOiJLYVZ5U09SdElNUHhkL3J1c2dENFRnPT0iLCJleHAiOjE3Mjk2OTYyNjh9.Oz84uB6OEu6CAT7Evx8eBVwmy8tbaJ9GX2POaay7rc4</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">edd464c9-9c6e-43e6-acf3-b993adf56cf5</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6STFOaUo5LmV5SnNiMk1pT2lKYVR5QkNZVzVuWVd4dmNtVWlMQ0poY0hCV1pYSnphVzl1SWpvaU1USXVOeUlzSW1kbGJtUmxjaUk2SWsxaGJHVWlMQ0poY0hCZmRtVnljMmx2YmlJNklqRXVNQ0lzSW5CaGRHZ2lPaUpvZEhSd2N6b3ZMMjF2WW1sc1pXRndjSE11YUdWeWIyMXZkRzlqYjNKd0xtTnZiUzlrZDJGd2NEOWhjSEE5UlUxUVRFOVpSVVVpTENKMWFXUWlPaUp0YjJKcGJHVmhjSEExTG5KbWJVQm9aWEp2Ylc5MGIyTnZjbkF1WTI5dElpd2lablZ1WTNScGIyNGlPaUpUUVV4RlV5QkJUa1FnUVVaVVJWSWdVMEZNUlZNaUxDSnpZMjl3WlNJNkltRnNiQ0lzSW5SdmEyVnVYM1JwYldVaU9pSXlNREkwTFRFd0xURTJJREl3T2pReU9qSTJJaXdpWjI5dloyeGxRWEJwUzJWNUlqb2lRVWw2WVZONVEyMHRZa0pXUzFsVE1tZHBWMDlXVEhwTlRVUjNVVnBEUjB0ck0zcExTWE13SWl3aWJHRnpkRjlzYjJkcGJpSTZJakl3TWpRdE1UQXRNVFlnTWpBNk5ERTZNRGdpTENKdGIySmZibThpT2lJaUxDSm1iM0pqWlZWd1pHRjBaU0k2SWs0aUxDSnRaWE56WVdkbElqb2lJaXdpZEc5clpXNGlPaUl3WkdKaU0yTTNNQzA0WW1ReExURXhaV1l0T1dVeFl5MWlZVGcwWm1JNFpqSXdNekVpTENJd0lqb2lJaXdpYzNWaVgyeHZZMkYwYVc5dUlqb2lXazhnUW1GdVoyRnNiM0psSWl3aVlYQndYMjVoYldVaU9pSklSVkFpTENKemRXTmpaWE56SWpvaU1TSXNJbWR5WVdSbElqb2lSVFVpTENKaFkyTmxjM05mYTJWNUlqb2lNR1JpWWpOak56QXRPR0prTVMweE1XVm1MVGxsTVdNdFltRTROR1ppT0dZeU1ETXhJaXdpYm1GdFpTSTZJbEIxYm1WbGRDSXNJbXh2WTJGMGFXOXVJam9pVTI5MWRHZ2dXbTl1WlNJc0ltUmxjMmxuYm1GMGFXOXVJam9pVkVWU1VrbFVUMUpaSUUxQlRrRkhSVklnTFNCVFJWSldTVU5GSWl3aWNISnZiWEIwSWpvaUlpd2laV05mYm04aU9pSXhOelV5TkNJc0ltVjRjQ0k2TVRjeU9UazFOVFUwTm4wLmhycVBCeFpBM0RveU1nWDUxU09DV2d2RlgtWTV3QkxDUkRPRkNQNW1XVGs</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get biometric punch in-14" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;PWSESSIONRS&quot;: {&#xd;
        &quot;PWPROCESSRS&quot;: {&#xd;
            &quot;PWDATA&quot;: {&#xd;
                &quot;RFCCALL&quot;: {&#xd;
                    &quot;app_name&quot;: &quot;ExchangeApp&quot;,&#xd;
                    &quot;export_table_data&quot;: {},&#xd;
                    &quot;import_table_name&quot;: &quot;[&apos;IT_ATT_DATA&apos;, &apos;IT_LEAVE_STATUS&apos;]&quot;,&#xd;
                    &quot;params&quot;: {&#xd;
                        &quot;PERNR&quot;: &quot;9728&quot;,&#xd;
                        &quot;DATE_FROM&quot;: &quot;16-10-2024&quot;,&#xd;
                        &quot;DATE_TO&quot;: &quot;16-10-2024&quot;&#xd;
                    },&#xd;
                    &quot;rfc_name&quot;: &quot;ZHR_EMP_ATTENDANCE_UPDATE_N&quot;,&#xd;
                    &quot;server&quot;: &quot;quality_ECC&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;PWERROR&quot;: {},&#xd;
            &quot;PWHEADER&quot;: {&#xd;
                &quot;LOGIN_ID&quot;: &quot;sudarsanan.k.ext@heromotocorp.com&quot;,&#xd;
                &quot;ORG_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;APP_ID&quot;: &quot;HEP&quot;,&#xd;
                &quot;IN_PROCESS_ID&quot;: &quot;3&quot;,&#xd;
                &quot;OUT_PROCESS_ID&quot;: &quot;RFCCALL&quot;&#xd;
            }&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">uat-apim.heromotocorp.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/rfc/cloudware_prod?ORG_ID=HEP</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="jwt-authorization" elementType="Header">
                <stringProp name="Header.name">jwt-authorization</stringProp>
                <stringProp name="Header.value">eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJIZXJvSHViIiwic3ViIjoiSldUVG9rZW4iLCJlbWFpbEFkZHJlc3MiOiJJMkc1N2xCNDA3d2Vhc0NtTUlUdVYvMHBkUTJ6eHVlY2o5cDlLSkZzcUJnPSIsImVtcGxveWVlSWQiOiJLYVZ5U09SdElNUHhkL3J1c2dENFRnPT0iLCJleHAiOjE3Mjk2OTYyNjh9.Oz84uB6OEu6CAT7Evx8eBVwmy8tbaJ9GX2POaay7rc4</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">39f3ef6a-ed2e-4ead-856e-6ee3f6d643ed</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">PostmanRuntime/7.42.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6STFOaUo5LmV5SnNiMk1pT2lKYVR5QkNZVzVuWVd4dmNtVWlMQ0poY0hCV1pYSnphVzl1SWpvaU1USXVOeUlzSW1kbGJtUmxjaUk2SWsxaGJHVWlMQ0poY0hCZmRtVnljMmx2YmlJNklqRXVNQ0lzSW5CaGRHZ2lPaUpvZEhSd2N6b3ZMMjF2WW1sc1pXRndjSE11YUdWeWIyMXZkRzlqYjNKd0xtTnZiUzlrZDJGd2NEOWhjSEE5UlUxUVRFOVpSVVVpTENKMWFXUWlPaUp0YjJKcGJHVmhjSEExTG5KbWJVQm9aWEp2Ylc5MGIyTnZjbkF1WTI5dElpd2lablZ1WTNScGIyNGlPaUpUUVV4RlV5QkJUa1FnUVVaVVJWSWdVMEZNUlZNaUxDSnpZMjl3WlNJNkltRnNiQ0lzSW5SdmEyVnVYM1JwYldVaU9pSXlNREkwTFRFd0xURTJJREl3T2pReU9qSTJJaXdpWjI5dloyeGxRWEJwUzJWNUlqb2lRVWw2WVZONVEyMHRZa0pXUzFsVE1tZHBWMDlXVEhwTlRVUjNVVnBEUjB0ck0zcExTWE13SWl3aWJHRnpkRjlzYjJkcGJpSTZJakl3TWpRdE1UQXRNVFlnTWpBNk5ERTZNRGdpTENKdGIySmZibThpT2lJaUxDSm1iM0pqWlZWd1pHRjBaU0k2SWs0aUxDSnRaWE56WVdkbElqb2lJaXdpZEc5clpXNGlPaUl3WkdKaU0yTTNNQzA0WW1ReExURXhaV1l0T1dVeFl5MWlZVGcwWm1JNFpqSXdNekVpTENJd0lqb2lJaXdpYzNWaVgyeHZZMkYwYVc5dUlqb2lXazhnUW1GdVoyRnNiM0psSWl3aVlYQndYMjVoYldVaU9pSklSVkFpTENKemRXTmpaWE56SWpvaU1TSXNJbWR5WVdSbElqb2lSVFVpTENKaFkyTmxjM05mYTJWNUlqb2lNR1JpWWpOak56QXRPR0prTVMweE1XVm1MVGxsTVdNdFltRTROR1ppT0dZeU1ETXhJaXdpYm1GdFpTSTZJbEIxYm1WbGRDSXNJbXh2WTJGMGFXOXVJam9pVTI5MWRHZ2dXbTl1WlNJc0ltUmxjMmxuYm1GMGFXOXVJam9pVkVWU1VrbFVUMUpaSUUxQlRrRkhSVklnTFNCVFJWSldTVU5GSWl3aWNISnZiWEIwSWpvaUlpd2laV05mYm04aU9pSXhOelV5TkNJc0ltVjRjQ0k2TVRjeU9UazFOVFUwTm4wLmhycVBCeFpBM0RveU1nWDUxU09DV2d2RlgtWTV3QkxDUkRPRkNQNW1XVGs</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>true</responseData>
            <samplerData>false</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="TestPlan.comments">C:\Hero_Hub_Mobile(Previous)\Results\VR_Loadtest_2810_1200Usr.xml</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="TestPlan.comments">C:\Hero_Hub_Mobile(Previous)\Results\AR_Loadtest_3110_1200Usr.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
